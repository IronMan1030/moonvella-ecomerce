[{"P:\\moonvella-ecommerce\\src\\index.js":"1","P:\\moonvella-ecommerce\\src\\App.js":"2","P:\\moonvella-ecommerce\\src\\routes.js":"3","P:\\moonvella-ecommerce\\src\\theme\\index.js":"4","P:\\moonvella-ecommerce\\src\\settings\\constants.js":"5","P:\\moonvella-ecommerce\\src\\pages\\Orders\\Orders.js":"6","P:\\moonvella-ecommerce\\src\\pages\\Category\\Category.js":"7","P:\\moonvella-ecommerce\\src\\pages\\Messages\\Messages.js":"8","P:\\moonvella-ecommerce\\src\\pages\\Settings\\Settings.js":"9","P:\\moonvella-ecommerce\\src\\pages\\Layout\\HomeLayout\\HomeLayout.js":"10","P:\\moonvella-ecommerce\\src\\pages\\Products\\Products.js":"11","P:\\moonvella-ecommerce\\src\\pages\\Layout\\Layout.js":"12","P:\\moonvella-ecommerce\\src\\pages\\Shop\\HomePage\\Home.js":"13","P:\\moonvella-ecommerce\\src\\pages\\Shop\\SignUpPage\\SignUp.js":"14","P:\\moonvella-ecommerce\\src\\pages\\Shop\\LoginPage\\Login.js":"15","P:\\moonvella-ecommerce\\src\\pages\\Shop\\ResultPage\\ProductResult.js":"16","P:\\moonvella-ecommerce\\src\\components\\InlineLoader\\InlineLoader.js":"17","P:\\moonvella-ecommerce\\src\\pages\\Dashboard\\Dashboard.js":"18","P:\\moonvella-ecommerce\\src\\pages\\Orders\\Orders.style.js":"19","P:\\moonvella-ecommerce\\src\\pages\\Layout\\Layout.style.js":"20","P:\\moonvella-ecommerce\\src\\settings\\useComponentSize.js":"21","P:\\moonvella-ecommerce\\src\\settings\\use-media.js":"22","P:\\moonvella-ecommerce\\src\\components\\Input\\Input.js":"23","P:\\moonvella-ecommerce\\src\\components\\CheckBox\\CheckBox.js":"24","P:\\moonvella-ecommerce\\src\\components\\Select\\Select.js":"25","P:\\moonvella-ecommerce\\src\\context\\ProductContext.js":"26","P:\\moonvella-ecommerce\\src\\pages\\Layout\\Topbar\\Topbar.js":"27","P:\\moonvella-ecommerce\\src\\components\\Button\\Button.js":"28","P:\\moonvella-ecommerce\\src\\pages\\Layout\\Sidebar\\Sidebar.js":"29","P:\\moonvella-ecommerce\\src\\context\\DrawerContext.js":"30","P:\\moonvella-ecommerce\\src\\components\\CategoryCard\\CategoryCard.js":"31","P:\\moonvella-ecommerce\\src\\components\\ProductCard\\ProductCard.js":"32","P:\\moonvella-ecommerce\\src\\pages\\DrawerItems\\DrawerItems.js":"33","P:\\moonvella-ecommerce\\src\\components\\FeaturedProductCard\\FeaturedProductCard.js":"34","P:\\moonvella-ecommerce\\src\\pages\\Shop\\FilterPage\\ProductFilter.js":"35","P:\\moonvella-ecommerce\\src\\assets\\icons\\Plus.js":"36","P:\\moonvella-ecommerce\\src\\assets\\icons\\Trash.js":"37","P:\\moonvella-ecommerce\\src\\assets\\icons\\CustomerIcon.js":"38","P:\\moonvella-ecommerce\\src\\assets\\icons\\CoinIcon.js":"39","P:\\moonvella-ecommerce\\src\\assets\\icons\\CouponIcon.js":"40","P:\\moonvella-ecommerce\\src\\assets\\icons\\ArrowPrev.js":"41","P:\\moonvella-ecommerce\\src\\assets\\icons\\DeliveryIcon.js":"42","P:\\moonvella-ecommerce\\src\\assets\\icons\\ArrowNext.js":"43","P:\\moonvella-ecommerce\\src\\assets\\icons\\UserIcon.js":"44","P:\\moonvella-ecommerce\\src\\assets\\icons\\CartIconBig.js":"45","P:\\moonvella-ecommerce\\src\\components\\Widgets\\ColumnChart\\ColumnChart.js":"46","P:\\moonvella-ecommerce\\src\\components\\Widgets\\StickerCard\\StickerCard.js":"47","P:\\moonvella-ecommerce\\src\\pages\\Layout\\HomeLayout\\Header\\index.js":"48","P:\\moonvella-ecommerce\\src\\pages\\Layout\\HomeLayout\\Footer\\index.js":"49","P:\\moonvella-ecommerce\\src\\settings\\debounce.js":"50","P:\\moonvella-ecommerce\\src\\assets\\icons\\CaretDownIcon.js":"51","P:\\moonvella-ecommerce\\src\\assets\\icons\\NotificationIcon.js":"52","P:\\moonvella-ecommerce\\src\\pages\\Layout\\Topbar\\Topbar.style.js":"53","P:\\moonvella-ecommerce\\src\\context\\create-context.js":"54","P:\\moonvella-ecommerce\\src\\assets\\icons\\AlertDotIcon.js":"55","P:\\moonvella-ecommerce\\src\\assets\\icons\\MenuIcon.js":"56","P:\\moonvella-ecommerce\\src\\assets\\icons\\ArrowLeftRound.js":"57","P:\\moonvella-ecommerce\\src\\assets\\icons\\MessageIcon.js":"58","P:\\moonvella-ecommerce\\src\\pages\\Layout\\Sidebar\\Sidebar.style.js":"59","P:\\moonvella-ecommerce\\src\\components\\Button\\Button.style.js":"60","P:\\moonvella-ecommerce\\src\\assets\\icons\\CloseIcon.js":"61","P:\\moonvella-ecommerce\\src\\components\\ProductCard\\ProductCard.style.js":"62","P:\\moonvella-ecommerce\\src\\assets\\icons\\SidebarCategoryIcon.js":"63","P:\\moonvella-ecommerce\\src\\assets\\icons\\ProductIcon.js":"64","P:\\moonvella-ecommerce\\src\\assets\\icons\\OrderIcon.js":"65","P:\\moonvella-ecommerce\\src\\assets\\icons\\SettingIcon.js":"66","P:\\moonvella-ecommerce\\src\\assets\\icons\\DashboardIcon.js":"67","P:\\moonvella-ecommerce\\src\\components\\Popover\\Popover.js":"68","P:\\moonvella-ecommerce\\src\\components\\Drawer\\Drawer.js":"69","P:\\moonvella-ecommerce\\src\\components\\Notification\\Notification.js":"70","P:\\moonvella-ecommerce\\src\\pages\\CategoryForm\\CategoryForm.js":"71","P:\\moonvella-ecommerce\\src\\pages\\ProductForm\\ProductForm.js":"72","P:\\moonvella-ecommerce\\src\\assets\\icons\\LogoutIcon.js":"73","P:\\moonvella-ecommerce\\src\\pages\\MailForm\\MailForm.js":"74","P:\\moonvella-ecommerce\\src\\assets\\icons\\ArrowUp.js":"75","P:\\moonvella-ecommerce\\src\\assets\\icons\\ArrowDown.js":"76","P:\\moonvella-ecommerce\\src\\assets\\icons\\IosArrowUp.js":"77","P:\\moonvella-ecommerce\\src\\assets\\icons\\IosArrowDown.js":"78","P:\\moonvella-ecommerce\\src\\components\\Widgets\\ColumnChart\\ColumnChart.style.js":"79","P:\\moonvella-ecommerce\\src\\components\\Widgets\\StickerCard\\StickerCard.style.js":"80","P:\\moonvella-ecommerce\\src\\components\\Charts\\Chart.js":"81","P:\\moonvella-ecommerce\\src\\components\\Box\\Box.js":"82","P:\\moonvella-ecommerce\\src\\pages\\Layout\\HomeLayout\\LeftMenu\\LeftMenu.js":"83","P:\\moonvella-ecommerce\\src\\pages\\Layout\\HomeLayout\\RightMenu\\RightMenu.js":"84","P:\\moonvella-ecommerce\\src\\features\\search\\search.js":"85","P:\\moonvella-ecommerce\\src\\components\\Notification\\Notification.style.js":"86","P:\\moonvella-ecommerce\\src\\pages\\ProductForm\\OptionsForm.js":"87","P:\\moonvella-ecommerce\\src\\pages\\DrawerItems\\DrawerItems.style.js":"88","P:\\moonvella-ecommerce\\src\\pages\\ProductForm\\VariantForm.js":"89","P:\\moonvella-ecommerce\\src\\components\\Image\\Image.js":"90","P:\\moonvella-ecommerce\\src\\components\\Notification\\NotificationCard.js":"91","P:\\moonvella-ecommerce\\src\\components\\DrawerBox\\DrawerBox.js":"92","P:\\moonvella-ecommerce\\src\\components\\Textarea\\Textarea.js":"93","P:\\moonvella-ecommerce\\src\\components\\Uploader\\Uploader.js":"94","P:\\moonvella-ecommerce\\src\\components\\FormFields\\FormFields.js":"95","P:\\moonvella-ecommerce\\src\\components\\Box\\Box.style.js":"96","P:\\moonvella-ecommerce\\src\\pages\\Layout\\HomeLayout\\LeftMenu\\LeftMenu.style.js":"97","P:\\moonvella-ecommerce\\src\\components\\SearchBox\\SearchBox.js":"98","P:\\moonvella-ecommerce\\src\\assets\\icons\\UploadIcon.js":"99","P:\\moonvella-ecommerce\\src\\components\\Tags\\CreateTags.js":"100","P:\\moonvella-ecommerce\\src\\assets\\icons\\SearchIcon.js":"101","P:\\moonvella-ecommerce\\src\\components\\SearchBox\\SearchBox.style.js":"102","P:\\moonvella-ecommerce\\src\\pages\\Shop\\DescriptionPage\\DescriptionPage.js":"103","P:\\moonvella-ecommerce\\src\\object\\items.js":"104","P:\\moonvella-ecommerce\\src\\object\\descriptionItems.js":"105","P:\\moonvella-ecommerce\\src\\components\\ArrayProductDescription\\ArrayProductDescription.js":"106"},{"size":391,"mtime":1615993162075,"results":"107","hashOfConfig":"108"},{"size":748,"mtime":1615993162016,"results":"109","hashOfConfig":"108"},{"size":5174,"mtime":1616359278448,"results":"110","hashOfConfig":"108"},{"size":4115,"mtime":1615993162093,"results":"111","hashOfConfig":"108"},{"size":691,"mtime":1616359136922,"results":"112","hashOfConfig":"108"},{"size":10114,"mtime":1615993162084,"results":"113","hashOfConfig":"108"},{"size":7547,"mtime":1615993162076,"results":"114","hashOfConfig":"108"},{"size":8289,"mtime":1615993162083,"results":"115","hashOfConfig":"108"},{"size":115,"mtime":1615993162086,"results":"116","hashOfConfig":"108"},{"size":259,"mtime":1615993162079,"results":"117","hashOfConfig":"108"},{"size":5176,"mtime":1616360384274,"results":"118","hashOfConfig":"108"},{"size":2085,"mtime":1615993162080,"results":"119","hashOfConfig":"108"},{"size":3322,"mtime":1615993162087,"results":"120","hashOfConfig":"108"},{"size":3493,"mtime":1615993162089,"results":"121","hashOfConfig":"108"},{"size":4207,"mtime":1615993162088,"results":"122","hashOfConfig":"108"},{"size":1389,"mtime":1616778578661,"results":"123","hashOfConfig":"108"},{"size":1281,"mtime":1615993162067,"results":"124","hashOfConfig":"108"},{"size":2930,"mtime":1615993162077,"results":"125","hashOfConfig":"108"},{"size":1873,"mtime":1615993162084,"results":"126","hashOfConfig":"108"},{"size":601,"mtime":1615993162080,"results":"127","hashOfConfig":"108"},{"size":1832,"mtime":1615993162092,"results":"128","hashOfConfig":"108"},{"size":661,"mtime":1615993162091,"results":"129","hashOfConfig":"108"},{"size":570,"mtime":1615993162067,"results":"130","hashOfConfig":"108"},{"size":374,"mtime":1615993162063,"results":"131","hashOfConfig":"108"},{"size":1705,"mtime":1615993162070,"results":"132","hashOfConfig":"108"},{"size":795,"mtime":1615993162074,"results":"133","hashOfConfig":"108"},{"size":4719,"mtime":1615993162081,"results":"134","hashOfConfig":"108"},{"size":706,"mtime":1615993162059,"results":"135","hashOfConfig":"108"},{"size":2372,"mtime":1615993162081,"results":"136","hashOfConfig":"108"},{"size":844,"mtime":1615993162073,"results":"137","hashOfConfig":"108"},{"size":403,"mtime":1615993162062,"results":"138","hashOfConfig":"108"},{"size":2085,"mtime":1616363034750,"results":"139","hashOfConfig":"108"},{"size":2853,"mtime":1615993162078,"results":"140","hashOfConfig":"108"},{"size":297,"mtime":1615993162064,"results":"141","hashOfConfig":"108"},{"size":4353,"mtime":1615993162086,"results":"142","hashOfConfig":"108"},{"size":837,"mtime":1615993162043,"results":"143","hashOfConfig":"108"},{"size":634,"mtime":1615993162050,"results":"144","hashOfConfig":"108"},{"size":3076,"mtime":1615993162025,"results":"145","hashOfConfig":"108"},{"size":1676,"mtime":1615993162024,"results":"146","hashOfConfig":"108"},{"size":1427,"mtime":1615993162025,"results":"147","hashOfConfig":"108"},{"size":461,"mtime":1615993162020,"results":"148","hashOfConfig":"108"},{"size":1977,"mtime":1615993162026,"results":"149","hashOfConfig":"108"},{"size":455,"mtime":1615993162020,"results":"150","hashOfConfig":"108"},{"size":3676,"mtime":1615993162052,"results":"151","hashOfConfig":"108"},{"size":1541,"mtime":1615993162023,"results":"152","hashOfConfig":"108"},{"size":3201,"mtime":1615993162072,"results":"153","hashOfConfig":"108"},{"size":1413,"mtime":1615993162073,"results":"154","hashOfConfig":"108"},{"size":476,"mtime":1615993162079,"results":"155","hashOfConfig":"108"},{"size":3644,"mtime":1615993162079,"results":"156","hashOfConfig":"108"},{"size":452,"mtime":1615993162091,"results":"157","hashOfConfig":"108"},{"size":403,"mtime":1615993162022,"results":"158","hashOfConfig":"108"},{"size":1234,"mtime":1615993162038,"results":"159","hashOfConfig":"108"},{"size":3504,"mtime":1615993162082,"results":"160","hashOfConfig":"108"},{"size":1442,"mtime":1615993162074,"results":"161","hashOfConfig":"108"},{"size":797,"mtime":1615993162018,"results":"162","hashOfConfig":"108"},{"size":970,"mtime":1615993162037,"results":"163","hashOfConfig":"108"},{"size":742,"mtime":1615993162019,"results":"164","hashOfConfig":"108"},{"size":1957,"mtime":1615993162037,"results":"165","hashOfConfig":"108"},{"size":2101,"mtime":1615993162081,"results":"166","hashOfConfig":"108"},{"size":1088,"mtime":1615993162060,"results":"167","hashOfConfig":"108"},{"size":553,"mtime":1615993162024,"results":"168","hashOfConfig":"108"},{"size":4413,"mtime":1615993162069,"results":"169","hashOfConfig":"108"},{"size":950,"mtime":1615993162048,"results":"170","hashOfConfig":"108"},{"size":741,"mtime":1615993162044,"results":"171","hashOfConfig":"108"},{"size":1177,"mtime":1615993162038,"results":"172","hashOfConfig":"108"},{"size":1815,"mtime":1615993162046,"results":"173","hashOfConfig":"108"},{"size":1380,"mtime":1615993162026,"results":"174","hashOfConfig":"108"},{"size":294,"mtime":1615993162068,"results":"175","hashOfConfig":"108"},{"size":302,"mtime":1615993162063,"results":"176","hashOfConfig":"108"},{"size":667,"mtime":1615993162067,"results":"177","hashOfConfig":"108"},{"size":6382,"mtime":1615993162077,"results":"178","hashOfConfig":"108"},{"size":19402,"mtime":1615993162085,"results":"179","hashOfConfig":"108"},{"size":2086,"mtime":1615993162035,"results":"180","hashOfConfig":"108"},{"size":3355,"mtime":1615993162082,"results":"181","hashOfConfig":"108"},{"size":630,"mtime":1615993162020,"results":"182","hashOfConfig":"108"},{"size":646,"mtime":1615993162018,"results":"183","hashOfConfig":"108"},{"size":665,"mtime":1615993162033,"results":"184","hashOfConfig":"108"},{"size":666,"mtime":1615993162033,"results":"185","hashOfConfig":"108"},{"size":1366,"mtime":1615993162072,"results":"186","hashOfConfig":"108"},{"size":2053,"mtime":1615993162073,"results":"187","hashOfConfig":"108"},{"size":167,"mtime":1615993162062,"results":"188","hashOfConfig":"108"},{"size":566,"mtime":1615993162059,"results":"189","hashOfConfig":"108"},{"size":310,"mtime":1615993162079,"results":"190","hashOfConfig":"108"},{"size":1107,"mtime":1615993162080,"results":"191","hashOfConfig":"108"},{"size":540,"mtime":1615993162075,"results":"192","hashOfConfig":"108"},{"size":3000,"mtime":1615993162068,"results":"193","hashOfConfig":"108"},{"size":3346,"mtime":1615993162084,"results":"194","hashOfConfig":"108"},{"size":1195,"mtime":1615993162078,"results":"195","hashOfConfig":"108"},{"size":6683,"mtime":1615993162085,"results":"196","hashOfConfig":"108"},{"size":509,"mtime":1615993162066,"results":"197","hashOfConfig":"108"},{"size":403,"mtime":1615993162068,"results":"198","hashOfConfig":"108"},{"size":500,"mtime":1615993162064,"results":"199","hashOfConfig":"108"},{"size":591,"mtime":1615993162071,"results":"200","hashOfConfig":"108"},{"size":4178,"mtime":1615993162072,"results":"201","hashOfConfig":"108"},{"size":1441,"mtime":1615993162065,"results":"202","hashOfConfig":"108"},{"size":923,"mtime":1615993162059,"results":"203","hashOfConfig":"108"},{"size":479,"mtime":1615993162079,"results":"204","hashOfConfig":"108"},{"size":1162,"mtime":1615993162070,"results":"205","hashOfConfig":"108"},{"size":1072,"mtime":1615993162051,"results":"206","hashOfConfig":"108"},{"size":2672,"mtime":1615993162071,"results":"207","hashOfConfig":"108"},{"size":760,"mtime":1615993162046,"results":"208","hashOfConfig":"108"},{"size":1916,"mtime":1615993162070,"results":"209","hashOfConfig":"108"},{"size":4363,"mtime":1616779133341,"results":"210","hashOfConfig":"108"},{"size":1431,"mtime":1616779268612,"results":"211","hashOfConfig":"108"},{"size":2744,"mtime":1616779300988,"results":"212","hashOfConfig":"108"},{"size":1244,"mtime":1616606289639,"results":"213","hashOfConfig":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},"16nxm20",{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"216"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"216"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"216"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"216"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"216"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"216"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"216"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"216"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"216"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"216"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"216"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"216"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"216"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"216"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"216"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},"P:\\moonvella-ecommerce\\src\\index.js",[],["442","443"],"P:\\moonvella-ecommerce\\src\\App.js",[],"P:\\moonvella-ecommerce\\src\\routes.js",[],"P:\\moonvella-ecommerce\\src\\theme\\index.js",[],"P:\\moonvella-ecommerce\\src\\settings\\constants.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Orders\\Orders.js",["444","445","446","447","448","449","450","451","452"],"import React, { useState } from \"react\";\r\nimport { styled, withStyle, createThemedUseStyletron } from \"baseui\";\r\nimport dayjs from \"dayjs\";\r\nimport Select from \"../../components/Select/Select\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport Checkbox from \"../../components/CheckBox/CheckBox\";\r\n\r\nimport { TableWrapper, StyledTable, StyledHeadCell, StyledCell } from \"./Orders.style\";\r\n\r\nconst themedUseStyletron = createThemedUseStyletron();\r\n\r\nconst Status = styled(\"div\", ({ $theme }) => ({\r\n  ...$theme.typography.fontBold14,\r\n  color: $theme.colors.textDark,\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  lineHeight: \"1\",\r\n  textTransform: \"capitalize\",\r\n\r\n  \":before\": {\r\n    content: '\"\"',\r\n    width: \"10px\",\r\n    height: \"10px\",\r\n    display: \"inline-block\",\r\n    borderTopLeftRadius: \"10px\",\r\n    borderTopRightRadius: \"10px\",\r\n    borderBottomRightRadius: \"10px\",\r\n    borderBottomLeftRadius: \"10px\",\r\n    backgroundColor: $theme.borders.borderE6,\r\n    marginRight: \"10px\",\r\n  },\r\n}));\r\n\r\nconst statusSelectOptions = [\r\n  { value: \"delivered\", label: \"Delivered\" },\r\n  { value: \"pending\", label: \"Pending\" },\r\n  { value: \"processing\", label: \"Processing\" },\r\n  { value: \"failed\", label: \"Failed\" },\r\n];\r\nconst limitSelectOptions = [\r\n  { value: 7, label: \"Last 7 orders\" },\r\n  { value: 15, label: \"Last 15 orders\" },\r\n  { value: 30, label: \"Last 30 orders\" },\r\n];\r\n\r\nexport default function Orders() {\r\n  const [checkedId, setCheckedId] = useState([]);\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const [useCss, theme] = themedUseStyletron();\r\n  const sent = useCss({\r\n    \":before\": {\r\n      content: '\"\"',\r\n      backgroundColor: theme.colors.primary,\r\n    },\r\n  });\r\n  const failed = useCss({\r\n    \":before\": {\r\n      content: '\"\"',\r\n      backgroundColor: theme.colors.red400,\r\n    },\r\n  });\r\n  const processing = useCss({\r\n    \":before\": {\r\n      content: '\"\"',\r\n      backgroundColor: theme.colors.textNormal,\r\n    },\r\n  });\r\n  const paid = useCss({\r\n    \":before\": {\r\n      content: '\"\"',\r\n      backgroundColor: theme.colors.blue400,\r\n    },\r\n  });\r\n\r\n  const [status, setStatus] = useState([]);\r\n  const [limit, setLimit] = useState([]);\r\n  const [search, setSearch] = useState([]);\r\n\r\n  // const { data, error, refetch } = useQuery(GET_ORDERS);\r\n  // if (error) {\r\n  //   return <div>Error! {error.message}</div>;\r\n  // }\r\n\r\n  function handleStatus({ value }) {\r\n    setStatus(value);\r\n    // if (value.length) {\r\n    //   refetch({\r\n    //     status: value[0].value,\r\n    //     limit: limit.length ? limit[0].value : null,\r\n    //   });\r\n    // } else {\r\n    //   refetch({ status: null });\r\n    // }\r\n  }\r\n\r\n  function handleLimit({ value }) {\r\n    setLimit(value);\r\n    // if (value.length) {\r\n    //   refetch({\r\n    //     status: status.length ? status[0].value : null,\r\n    //     limit: value[0].value,\r\n    //   });\r\n    // } else {\r\n    //   refetch({\r\n    //     limit: null,\r\n    //   });\r\n    // }\r\n  }\r\n  function handleSearch(event) {\r\n    const { value } = event.currentTarget;\r\n    setSearch(value);\r\n    // refetch({ searchText: value });\r\n  }\r\n  function onAllCheck(event) {\r\n    // if (event.target.checked) {\r\n    //   const idx = data && data.orders.map((order) => order.id);\r\n    //   setCheckedId(idx);\r\n    // } else {\r\n    //   setCheckedId([]);\r\n    // }\r\n    setChecked(event.target.checked);\r\n  }\r\n\r\n  function handleCheckbox(event) {\r\n    const { name } = event.currentTarget;\r\n    if (!checkedId.includes(name)) {\r\n      setCheckedId((prevState) => [...prevState, name]);\r\n    } else {\r\n      setCheckedId((prevState) => prevState.filter((id) => id !== name));\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div\r\n            className=\"dashboard-content-header\"\r\n            style={{\r\n              marginBottom: 30,\r\n              boxShadow: \"0 0 8px rgba(0, 0 ,0, 0.1)\",\r\n            }}\r\n          >\r\n            <div className=\"col-md-3\">\r\n              <h3 className=\"heading-title\">Orders</h3>\r\n            </div>\r\n\r\n            <div className=\"col-md-9\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-3\">\r\n                  <Select\r\n                    options={statusSelectOptions}\r\n                    labelKey=\"label\"\r\n                    valueKey=\"value\"\r\n                    placeholder=\"Status\"\r\n                    value={status}\r\n                    searchable={false}\r\n                    onChange={handleStatus}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-md-3\">\r\n                  <Select\r\n                    options={limitSelectOptions}\r\n                    labelKey=\"label\"\r\n                    valueKey=\"value\"\r\n                    value={limit}\r\n                    placeholder=\"Order Limits\"\r\n                    searchable={false}\r\n                    onChange={handleLimit}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                  <Input value={search} placeholder=\"Ex: Search By Address\" onChange={handleSearch} clearable />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ boxShadow: \"0 0 5px rgba(0, 0 , 0, 0.05)\" }}>\r\n            <TableWrapper>\r\n              <StyledTable $gridTemplateColumns=\"minmax(70px, 70px) minmax(70px, 70px) minmax(150px, auto) minmax(150px, auto) minmax(200px, max-content) minmax(150px, auto) minmax(150px, auto) minmax(150px, auto) minmax(150px, auto)\">\r\n                <StyledHeadCell style={{ paddingBottom: \"4px\" }}>\r\n                  <Checkbox\r\n                    type=\"checkbox\"\r\n                    value=\"checkAll\"\r\n                    checked={checked}\r\n                    onChange={onAllCheck}\r\n                    overrides={{\r\n                      Checkmark: {\r\n                        style: {\r\n                          borderTopWidth: \"2px\",\r\n                          borderRightWidth: \"2px\",\r\n                          borderBottomWidth: \"2px\",\r\n                          borderLeftWidth: \"2px\",\r\n                          borderTopLeftRadius: \"4px\",\r\n                          borderTopRightRadius: \"4px\",\r\n                          borderBottomRightRadius: \"4px\",\r\n                          borderBottomLeftRadius: \"4px\",\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </StyledHeadCell>\r\n                <StyledHeadCell>ID</StyledHeadCell>\r\n                <StyledHeadCell>Customer ID</StyledHeadCell>\r\n                <StyledHeadCell>Time</StyledHeadCell>\r\n                <StyledHeadCell>Delivery Address</StyledHeadCell>\r\n                <StyledHeadCell>Amount</StyledHeadCell>\r\n                <StyledHeadCell>Payment Method</StyledHeadCell>\r\n                <StyledHeadCell>Contact</StyledHeadCell>\r\n                <StyledHeadCell>Status</StyledHeadCell>\r\n\r\n                {/* {data ? (\r\n                  data.orders.length ? (\r\n                    data.orders\r\n                      .map((item) => Object.values(item))\r\n                      .map((row, index) => (\r\n                        <React.Fragment key={index}>\r\n                          <StyledCell>\r\n                            <Checkbox\r\n                              name={row[1]}\r\n                              checked={checkedId.includes(row[1])}\r\n                              onChange={handleCheckbox}\r\n                              overrides={{\r\n                                Checkmark: {\r\n                                  style: {\r\n                                    borderTopWidth: \"2px\",\r\n                                    borderRightWidth: \"2px\",\r\n                                    borderBottomWidth: \"2px\",\r\n                                    borderLeftWidth: \"2px\",\r\n                                    borderTopLeftRadius: \"4px\",\r\n                                    borderTopRightRadius: \"4px\",\r\n                                    borderBottomRightRadius: \"4px\",\r\n                                    borderBottomLeftRadius: \"4px\",\r\n                                  },\r\n                                },\r\n                              }}\r\n                            />\r\n                          </StyledCell>\r\n                          <StyledCell>{row[1]}</StyledCell>\r\n                          <StyledCell>{row[2]}</StyledCell>\r\n                          <StyledCell>{dayjs(row[3]).format(\"DD MMM YYYY\")}</StyledCell>\r\n                          <StyledCell>{row[4]}</StyledCell>\r\n                          <StyledCell>${row[5]}</StyledCell>\r\n                          <StyledCell>{row[6]}</StyledCell>\r\n                          <StyledCell>{row[7]}</StyledCell>\r\n                          <StyledCell style={{ justifyContent: \"center\" }}>\r\n                            <Status\r\n                              className={\r\n                                row[8].toLowerCase() === \"delivered\"\r\n                                  ? sent\r\n                                  : row[8].toLowerCase() === \"pending\"\r\n                                  ? paid\r\n                                  : row[8].toLowerCase() === \"processing\"\r\n                                  ? processing\r\n                                  : row[8].toLowerCase() === \"failed\"\r\n                                  ? failed\r\n                                  : \"\"\r\n                              }\r\n                            >\r\n                              {row[8]}\r\n                            </Status>\r\n                          </StyledCell>\r\n                        </React.Fragment>\r\n                      ))\r\n                  ) : (\r\n                    <NoResult\r\n                      hideButton={false}\r\n                      style={{\r\n                        gridColumnStart: \"1\",\r\n                        gridColumnEnd: \"one\",\r\n                      }}\r\n                    />\r\n                  )\r\n                ) : null} */}\r\n              </StyledTable>\r\n            </TableWrapper>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","P:\\moonvella-ecommerce\\src\\pages\\Category\\Category.js",["453"],"import React, { useCallback, useState } from \"react\";\r\nimport Select from \"../../components/Select/Select\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Checkbox from \"../../components/CheckBox/CheckBox\";\r\nimport { Plus } from \"../../assets/icons/Plus\";\r\n// import * as icons from \"../../assets/icons/category-icons\";\r\nimport \"./Category.css\";\r\nimport DrawerContext from \"../../context/DrawerContext\";\r\n\r\nconst categorySelectOptions = [\r\n  { value: \"grocery\", label: \"Grocery\" },\r\n  { value: \"women-cloths\", label: \"Women Cloth\" },\r\n  { value: \"bags\", label: \"Bags\" },\r\n  { value: \"makeup\", label: \"Makeup\" },\r\n];\r\n\r\n// let categoryData = [{ id: 1, name: \"grocery\" }];\r\nexport default function Category() {\r\n  const [category, setCategory] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [checkedId, setCheckedId] = useState([]);\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const dispatch = DrawerContext.useDrawerDispatch();\r\n  const openDrawer = useCallback(() => dispatch({ type: \"OPEN_DRAWER\", drawerComponent: \"CATEGORY_FORM\" }), [dispatch]);\r\n\r\n  const handleSearch = (event) => {\r\n    const value = event.currentTarget.value;\r\n    setSearch(value);\r\n  };\r\n  const handleCategory = ({ value }) => {\r\n    setCategory(value);\r\n  };\r\n\r\n  const onAllCheck = (event) => {\r\n    if (event.target.checked) {\r\n      // const idx = data && data.categories.map((current) => current.id);\r\n      // setCheckedId(idx);\r\n    } else {\r\n      setCheckedId([]);      \r\n    }\r\n    setChecked(event.target.checked);\r\n  };\r\n\r\n  // const handleCheckbox = (event) => {\r\n  //   const { name } = event.currentTarget;\r\n  //   if (!checkedId.includes(name)) {\r\n  //     setCheckedId((prevState) => [...prevState, name]);\r\n  //   } else {\r\n  //     setCheckedId((prevState) => prevState.filter((id) => id !== name));\r\n  //   }\r\n  // };\r\n  // const Icon = ({ name }) => {\r\n  //   const TagName = icons[name];\r\n  //   return !!TagName ? <TagName /> : <p>Invalid icon {name}</p>;\r\n  // };\r\n\r\n  // const handleAddCategory = () => {\r\n  //   console.log(\"aaa\");\r\n  // };\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div\r\n            className=\"dashboard-content-header\"\r\n            style={{\r\n              marginBottom: 30,\r\n              boxShadow: \"0 0 5px rgba(0, 0 ,0, 0.05)\",\r\n            }}\r\n          >\r\n            <div className=\"col-md-2\">\r\n              <h3 className=\"heading-title\">Category</h3>\r\n            </div>\r\n\r\n            <div className=\"col-md-10\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-3 col-lg-3\">\r\n                  <Select\r\n                    options={categorySelectOptions}\r\n                    labelKey=\"label\"\r\n                    valueKey=\"value\"\r\n                    placeholder=\"Category Type\"\r\n                    value={category}\r\n                    searchable={false}\r\n                    onChange={handleCategory}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-md-5 col-lg-6\">\r\n                  <Input value={search} placeholder=\"Ex: Search By Name\" onChange={handleSearch} clearable />\r\n                </div>\r\n\r\n                <div className=\"col-md-4 col-lg-3\">\r\n                  <Button\r\n                    onClick={openDrawer}\r\n                    startEnhancer={() => <Plus />}\r\n                    overrides={{\r\n                      BaseButton: {\r\n                        style: () => ({\r\n                          width: \"100%\",\r\n                          borderTopLeftRadius: \"3px\",\r\n                          borderTopRightRadius: \"3px\",\r\n                          borderBottomLeftRadius: \"3px\",\r\n                          borderBottomRightRadius: \"3px\",\r\n                        }),\r\n                      },\r\n                    }}\r\n                  >\r\n                    Add Category\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ boxShadow: \"0 0 5px rgba(0, 0 , 0, 0.05)\" }}>\r\n            <div className=\"table-wrapper\">\r\n              <div className=\"styled-table\">\r\n                <div className=\"styled-head-cell\" style={{ paddingBottom: \"2px\", width: \"70px\" }}>\r\n                  <Checkbox\r\n                    type=\"checkbox\"\r\n                    value=\"checkAll\"\r\n                    checked={checked}\r\n                    onChange={onAllCheck}\r\n                    overrides={{\r\n                      Checkmark: {\r\n                        style: {\r\n                          borderTopWidth: \"2px\",\r\n                          borderRightWidth: \"2px\",\r\n                          borderBottomWidth: \"2px\",\r\n                          borderLeftWidth: \"2px\",\r\n                          borderTopLeftRadius: \"4px\",\r\n                          borderTopRightRadius: \"4px\",\r\n                          borderBottomRightRadius: \"4px\",\r\n                          borderBottomLeftRadius: \"4px\",\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"styled-head-cell\">Id</div>\r\n                <div className=\"styled-head-cell\">Name</div>\r\n                <div className=\"styled-head-cell\">Slug</div>\r\n                <div className=\"styled-head-cell\">Type</div>\r\n\r\n                {/* {data ? (\r\n                  data.categories.length ? (\r\n                    data.categories\r\n                      .map((item) => Object.values(item))\r\n                      .map((row, index) => (\r\n                        <React.Fragment key={index}>\r\n                          <StyledCell>\r\n                            <Checkbox\r\n                              name={row[1]}\r\n                              checked={checkedId.includes(row[1])}\r\n                              onChange={handleCheckbox}\r\n                              overrides={{\r\n                                Checkmark: {\r\n                                  style: {\r\n                                    borderTopWidth: \"2px\",\r\n                                    borderRightWidth: \"2px\",\r\n                                    borderBottomWidth: \"2px\",\r\n                                    borderLeftWidth: \"2px\",\r\n                                    borderTopLeftRadius: \"4px\",\r\n                                    borderTopRightRadius: \"4px\",\r\n                                    borderBottomRightRadius: \"4px\",\r\n                                    borderBottomLeftRadius: \"4px\",\r\n                                  },\r\n                                },\r\n                              }}\r\n                            />\r\n                          </StyledCell>\r\n                          <StyledCell>{row[1]}</StyledCell>                      \r\n                          <StyledCell>{row[3]}</StyledCell>\r\n                          <StyledCell>{row[4]}</StyledCell>\r\n                          <StyledCell>{row[5]}</StyledCell>\r\n                        </React.Fragment>\r\n                      ))\r\n                  ) : (\r\n                    <NoResult\r\n                      hideButton={false}\r\n                      style={{\r\n                        gridColumnStart: \"1\",\r\n                        gridColumnEnd: \"one\",\r\n                      }}\r\n                    />\r\n                  )\r\n                ) : null} */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","P:\\moonvella-ecommerce\\src\\pages\\Messages\\Messages.js",["454","455","456"],"import React, { useCallback, useState, useEffect } from \"react\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport Checkbox from \"../../components/CheckBox/CheckBox\";\r\nimport { CustomerIcon } from \"../../assets/icons/CustomerIcon\";\r\nimport { CouponIcon } from \"../../assets/icons/CouponIcon\";\r\nimport { TrashIcon } from \"../../assets/icons/Trash\";\r\nimport { ArrowNext } from \"../../assets/icons/ArrowNext\";\r\nimport { ArrowPrev } from \"../../assets/icons/ArrowPrev\";\r\nimport { Plus } from \"../../assets/icons/Plus\";\r\nimport DrawerContext from \"../../context/DrawerContext\";\r\nimport \"./Messages.css\";\r\n\r\nfunction Messages() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const dispatch = DrawerContext.useDrawerDispatch();\r\n  const openDrawer = useCallback(() => dispatch({ type: \"OPEN_DRAWER\", drawerComponent: \"MAIL_FORM\" }), [dispatch]);\r\n  const [isActive, setIsActive] = useState(1);\r\n  const [checkedId, setCheckedId] = useState([]);\r\n  const [checked, setChecked] = useState(false);\r\n  const [paginationCount, setPaginationCount] = useState();\r\n  const [msgCon, setMsgCon] = useState([]);\r\n\r\n  const resInboxMsgCon = [\r\n    {\r\n      id: 1,\r\n      sender: \"Mike\",\r\n      senderEmail: \"test1@test1.com\",\r\n      senderCon: \"send test\",\r\n      receiverEmail: \"testReceiver@test.com\",\r\n      date: \"2021/1/9\",\r\n    },\r\n  ];\r\n  const resSentMsgCon = [\r\n    {\r\n      id: 1,\r\n      sender: \"Jane\",\r\n      senderEmail: \"test2@test.com\",\r\n      senderCon: \"send test2\",\r\n      receiverEmail: \"testReceiver2@test.com\",\r\n      date: \"2021/1/8\",\r\n    },\r\n  ];\r\n\r\n  const handleSearch = (event) => {\r\n    const value = event.currentTarget.value;\r\n    setSearch(value);\r\n  };\r\n\r\n  const onAllCheck = (event) => {\r\n    if (event.target.checked) {\r\n      const idx = msgCon && msgCon.map((current) => current.id);\r\n      setCheckedId(idx);\r\n    } else {\r\n      setCheckedId([]);\r\n    }\r\n    setChecked(event.target.checked);\r\n  };\r\n  const handleCheckbox = (event) => {\r\n    const { name } = event.currentTarget;\r\n    if (!checkedId.includes(parseInt(name))) {\r\n      setCheckedId((prevState) => [...prevState, parseInt(name)]);\r\n    } else {\r\n      setCheckedId((prevState) => prevState.filter((id) => id !== parseInt(name)));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMsgCon(resInboxMsgCon);\r\n  }, []);\r\n\r\n  const handleLeftTabClick = (index) => {\r\n    if (index === 1) {\r\n      setIsActive(1);\r\n      setMsgCon(resInboxMsgCon);\r\n    } else {\r\n      setIsActive(2);\r\n      setMsgCon(resSentMsgCon);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"msg-section\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3\">\r\n          <div className=\"msg-card\">\r\n            <div className=\"msg-card-body\">\r\n              <div className=\"email-list\">\r\n                <Button\r\n                  startEnhancer={() => <Plus />}\r\n                  overrides={{\r\n                    BaseButton: {\r\n                      style: () => ({\r\n                        width: \"100%\",\r\n                        borderTopLeftRadius: \"3px\",\r\n                        borderTopRightRadius: \"3px\",\r\n                        borderBottomLeftRadius: \"3px\",\r\n                        borderBottomRightRadius: \"3px\",\r\n                      }),\r\n                    },\r\n                  }}\r\n                  onClick={openDrawer}\r\n                >\r\n                  New Message\r\n                </Button>\r\n\r\n                <div className=\"email-btn-section\">\r\n                  <li className={`inbox ${isActive === 1 && \"active\"}`} onClick={() => handleLeftTabClick(1)}>\r\n                    <span>\r\n                      <CustomerIcon />\r\n                    </span>\r\n                    <div className=\"inbox-body\">\r\n                      <p>Inbox</p>\r\n                      <p>4</p>\r\n                    </div>\r\n                  </li>\r\n                  <li className={`inbox ${isActive === 2 && \"active\"}`} onClick={() => handleLeftTabClick(2)}>\r\n                    <span>\r\n                      <CouponIcon />\r\n                    </span>\r\n                    <p>Sent Mail</p>\r\n                  </li>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-9\">\r\n          <div\r\n            className=\"dashboard-content-header\"\r\n            style={{\r\n              marginBottom: 30,\r\n              boxShadow: \"0 0 5px rgba(0, 0 ,0, 0.05)\",\r\n            }}\r\n          >\r\n            <div className=\"col-md-2\">\r\n              <div className=\"d-flex\">\r\n                <Checkbox\r\n                  type=\"checkbox\"\r\n                  value=\"checkAll\"\r\n                  checked={checked}\r\n                  onChange={onAllCheck}\r\n                  overrides={{\r\n                    Checkmark: {\r\n                      style: {\r\n                        borderTopWidth: \"2px\",\r\n                        borderRightWidth: \"2px\",\r\n                        borderBottomWidth: \"2px\",\r\n                        borderLeftWidth: \"2px\",\r\n                        borderTopLeftRadius: \"4px\",\r\n                        borderTopRightRadius: \"4px\",\r\n                        borderBottomRightRadius: \"4px\",\r\n                        borderBottomLeftRadius: \"4px\",\r\n                      },\r\n                    },\r\n                  }}\r\n                />\r\n                <div className=\"h-icon\">\r\n                  <span>\r\n                    <TrashIcon />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-10\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-5 col-lg-6\">\r\n                  <Input value={search} placeholder=\"Ex: Search\" onChange={handleSearch} clearable />\r\n                </div>\r\n                <div className=\"col-md-3 col-lg-3\">\r\n                  <div className=\"h-cell\">\r\n                    <p>1 - 50 of 505</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-3\">\r\n                  <div className=\"d-flex h-cell\">\r\n                    <div className=\"h-icon\">\r\n                      <span>\r\n                        <ArrowPrev />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"h-icon ml-2\">\r\n                      <span>\r\n                        <ArrowNext />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* message body */}\r\n          <div className=\"table-wrapper\">\r\n            {msgCon.map((value, index) => {\r\n              return (\r\n                <div className=\"styled-table-row\" key={index}>\r\n                  <div className=\"styled-cell\" style={{ paddingBottom: \"2px\", width: \"70px\" }}>\r\n                    <Checkbox\r\n                      type=\"checkbox\"\r\n                      name={value.id}\r\n                      checked={checkedId.includes(value.id)}\r\n                      onChange={handleCheckbox}\r\n                      overrides={{\r\n                        Checkmark: {\r\n                          style: {\r\n                            borderTopWidth: \"2px\",\r\n                            borderRightWidth: \"2px\",\r\n                            borderBottomWidth: \"2px\",\r\n                            borderLeftWidth: \"2px\",\r\n                            borderTopLeftRadius: \"4px\",\r\n                            borderTopRightRadius: \"4px\",\r\n                            borderBottomRightRadius: \"4px\",\r\n                            borderBottomLeftRadius: \"4px\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"styled-cell\" style={{ width: \"380px\" }}>\r\n                    {value.sender}\r\n                  </div>\r\n                  <div className=\"styled-cell\">{value.senderCon}...</div>\r\n                  <div className=\"styled-cell\" style={{ width: \"200px\" }}>\r\n                    {value.date}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messages;\r\n","P:\\moonvella-ecommerce\\src\\pages\\Settings\\Settings.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Layout\\HomeLayout\\HomeLayout.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Products\\Products.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Layout\\Layout.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Shop\\HomePage\\Home.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Shop\\SignUpPage\\SignUp.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Shop\\LoginPage\\Login.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Shop\\ResultPage\\ProductResult.js",[],"P:\\moonvella-ecommerce\\src\\components\\InlineLoader\\InlineLoader.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Dashboard\\Dashboard.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Orders\\Orders.style.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Layout\\Layout.style.js",[],"P:\\moonvella-ecommerce\\src\\settings\\useComponentSize.js",[],"P:\\moonvella-ecommerce\\src\\settings\\use-media.js",[],"P:\\moonvella-ecommerce\\src\\components\\Input\\Input.js",[],"P:\\moonvella-ecommerce\\src\\components\\CheckBox\\CheckBox.js",[],"P:\\moonvella-ecommerce\\src\\components\\Select\\Select.js",["457"],"import * as React from \"react\";\r\nimport { Select } from \"baseui/select\";\r\nimport { CaretDownIcon } from \"../../assets/icons/CaretDownIcon\";\r\n\r\nexport const getContainerFontStyle = ({ $theme }) => {\r\n  return $theme.typography.fontBold14;\r\n};\r\n\r\nexport default ({ ...props }) => {\r\n  return (\r\n    <Select\r\n      overrides={{\r\n        SelectArrow: () => {\r\n          return <CaretDownIcon />;\r\n        },\r\n        Popover: {\r\n          props: {\r\n            overrides: {\r\n              Body: {\r\n                style: { zIndex: 1 },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        Placeholder: {\r\n          style: ({ $theme }) => ({\r\n            color: $theme.colors.textDark,\r\n            ...getContainerFontStyle({ $theme }),\r\n          }),\r\n        },\r\n        SingleValue: {\r\n          style: ({ $theme }) => ({\r\n            ...getContainerFontStyle({ $theme }),\r\n            color: $theme.colors.textDark,\r\n            lineHeight: \"1.5\",\r\n          }),\r\n        },\r\n        DropdownListItem: {\r\n          style: ({ $theme }) => ({\r\n            fontSize: \"14px\",\r\n            fontWeight: \"700\",\r\n            color: $theme.colors.textDark,\r\n          }),\r\n        },\r\n        OptionContent: {\r\n          style: ({ $theme, $selected }) => {\r\n            return {\r\n              ...$theme.typography.fontBold14,\r\n              color: $selected ? $theme.colors.textDark : $theme.colors.textNormal,\r\n            };\r\n          },\r\n        },\r\n        DropdownOption: {\r\n          style: ({ $theme }) => ({\r\n            fontSize: \"14px\",\r\n            fontWeight: \"700\",\r\n            color: $theme.colors.textDark,\r\n          }),\r\n        },\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n","P:\\moonvella-ecommerce\\src\\context\\ProductContext.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Layout\\Topbar\\Topbar.js",["458"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Popover, { PLACEMENT } from \"../../../components/Popover/Popover\";\r\nimport Notification from \"../../../components/Notification/Notification\";\r\n// import { AuthContext } from \"context/auth\";\r\nimport { NotificationIcon } from \"../../../assets/icons/NotificationIcon\";\r\nimport { AlertDotIcon } from \"../../../assets/icons/AlertDotIcon\";\r\nimport { ArrowLeftRound } from \"../../../assets/icons/ArrowLeftRound\";\r\nimport { MenuIcon } from \"../../../assets/icons/MenuIcon\";\r\nimport {\r\n  TopbarWrapper,\r\n  Logo,\r\n  LogoImage,\r\n  TopbarRightSide,\r\n  ProfileImg,\r\n  Image,\r\n  AlertDot,\r\n  NotificationIconWrapper,\r\n  UserDropDownItem,\r\n  NavLink,\r\n  LogoutBtn,\r\n  DrawerIcon,\r\n  CloseButton,\r\n  DrawerWrapper,\r\n} from \"./Topbar.style\";\r\nimport LogoDarkImage from \"../../../assets/image/logo_dark.png\";\r\nimport UserImage from \"../../../assets/image/user.jpg\";\r\n\r\nimport Drawer, { ANCHOR } from \"../../../components/Drawer/Drawer\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\n\r\nconst data = [\r\n  {\r\n    title: \"Delivery Successful\",\r\n    time: \"5m\",\r\n    message: \"Order #34567 had been placed\",\r\n  },\r\n];\r\nconst Topbar = ({ refs }) => {\r\n  // const { signout } = React.useContext(AuthContext);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  return (\r\n    <TopbarWrapper ref={refs}>\r\n      <Logo>\r\n        <Link to=\"/\">\r\n          <LogoImage src={LogoDarkImage} alt=\"vendor-admin\" />\r\n        </Link>\r\n      </Logo>\r\n\r\n      <DrawerWrapper>\r\n        <DrawerIcon onClick={() => setIsDrawerOpen(true)}>\r\n          <MenuIcon />\r\n        </DrawerIcon>\r\n        <Drawer\r\n          isOpen={isDrawerOpen}\r\n          anchor={ANCHOR.left}\r\n          onClose={() => setIsDrawerOpen(false)}\r\n          overrides={{\r\n            Root: {\r\n              style: {\r\n                zIndex: \"1\",\r\n              },\r\n            },\r\n            DrawerBody: {\r\n              style: {\r\n                marginRight: \"0\",\r\n                marginLeft: \"0\",\r\n                \"@media only screen and (max-width: 767px)\": {\r\n                  marginLeft: \"30px\",\r\n                },\r\n              },\r\n            },\r\n            DrawerContainer: {\r\n              style: {\r\n                width: \"270px\",\r\n                \"@media only screen and (max-width: 767px)\": {\r\n                  width: \"80%\",\r\n                },\r\n              },\r\n            },\r\n            Close: {\r\n              component: () => (\r\n                <CloseButton onClick={() => setIsDrawerOpen(false)}>\r\n                  <ArrowLeftRound />\r\n                </CloseButton>\r\n              ),\r\n            },\r\n          }}\r\n        >\r\n          <Sidebar onMenuItemClick={() => setIsDrawerOpen(false)} />\r\n        </Drawer>\r\n      </DrawerWrapper>\r\n\r\n      <TopbarRightSide>\r\n        <Popover\r\n          content={({ close }) => <Notification data={data} onClear={close} />}\r\n          accessibilityType={\"tooltip\"}\r\n          placement={PLACEMENT.bottomRight}\r\n          overrides={{\r\n            Body: {\r\n              style: {\r\n                width: \"330px\",\r\n                zIndex: 2,\r\n              },\r\n            },\r\n            Inner: {\r\n              style: {\r\n                backgroundColor: \"#ffffff\",\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <NotificationIconWrapper>\r\n            <NotificationIcon />\r\n            <AlertDot>\r\n              <AlertDotIcon />\r\n            </AlertDot>\r\n          </NotificationIconWrapper>\r\n        </Popover>\r\n\r\n        <Popover\r\n          content={({ close }) => (\r\n            <UserDropDownItem>\r\n              {/* <NavLink to=\"#\" exact={false} onClick={close}>\r\n                Staff\r\n              </NavLink>\r\n              <NavLink to=\"#\" exact={false} onClick={close}>\r\n                Settings\r\n              </NavLink> */}\r\n              <LogoutBtn\r\n                onClick={() => {\r\n                  // signout();\r\n                  close();\r\n                }}\r\n              >\r\n                Logout\r\n              </LogoutBtn>\r\n            </UserDropDownItem>\r\n          )}\r\n          accessibilityType={\"tooltip\"}\r\n          placement={PLACEMENT.bottomRight}\r\n          overrides={{\r\n            Body: {\r\n              style: () => ({\r\n                width: \"220px\",\r\n                zIndex: 2,\r\n              }),\r\n            },\r\n            Inner: {\r\n              style: {\r\n                backgroundColor: \"#ffffff\",\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <ProfileImg>\r\n            <Image src={UserImage} alt=\"user\" />\r\n          </ProfileImg>\r\n        </Popover>\r\n      </TopbarRightSide>\r\n    </TopbarWrapper>\r\n  );\r\n};\r\n\r\nexport default Topbar;\r\n","P:\\moonvella-ecommerce\\src\\components\\Button\\Button.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Layout\\Sidebar\\Sidebar.js",["459","460","461"],"import React, { useContext } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { SidebarWrapper, NavLink, MenuWrapper, Svg, LogoutBtn } from \"./Sidebar.style\";\r\nimport { DASHBOARD, PRODUCTS, CATEGORY, ORDERS, SETTINGS, MESSAGES } from \"../../../settings/constants\";\r\n\r\nimport { DashboardIcon } from \"../../../assets/icons/DashboardIcon\";\r\nimport { ProductIcon } from \"../../../assets/icons/ProductIcon\";\r\nimport { SidebarCategoryIcon } from \"../../../assets/icons/SidebarCategoryIcon\";\r\nimport { OrderIcon } from \"../../../assets/icons/OrderIcon\";\r\nimport { LogoutIcon } from \"../../../assets/icons/LogoutIcon\";\r\nimport { SettingIcon } from \"../../../assets/icons/SettingIcon\";\r\nimport { MessageIcon } from \"../../../assets/icons/MessageIcon\";\r\n\r\nconst sidebarMenus = [\r\n  {\r\n    name: \"Dashboard\",\r\n    path: DASHBOARD,\r\n    exact: true,\r\n    icon: <DashboardIcon />,\r\n  },\r\n  {\r\n    name: \"Products\",\r\n    path: PRODUCTS,\r\n    exact: false,\r\n    icon: <ProductIcon />,\r\n  },\r\n  // {\r\n  //   name: \"Category\",\r\n  //   path: CATEGORY,\r\n  //   exact: false,\r\n  //   icon: <SidebarCategoryIcon />,\r\n  // },\r\n  {\r\n    name: \"Orders\",\r\n    path: ORDERS,\r\n    exact: false,\r\n    icon: <OrderIcon />,\r\n  },\r\n  {\r\n    name: \"Messages\",\r\n    path: MESSAGES,\r\n    exact: false,\r\n    icon: <MessageIcon />,\r\n  },\r\n  {\r\n    name: \"Settings\",\r\n    path: SETTINGS,\r\n    exact: false,\r\n    icon: <SettingIcon />,\r\n  },\r\n];\r\n\r\nexport default withRouter(function Sidebar({ refs, style, onMenuItemClick }) {\r\n  //   const { signout } = useContext(AuthContext);\r\n  return (\r\n    <SidebarWrapper ref={refs} style={style}>\r\n      <MenuWrapper>\r\n        {sidebarMenus.map((menu, index) => (\r\n          <NavLink\r\n            to={menu.path}\r\n            key={index}\r\n            exact={menu.exact}\r\n            activeStyle={{\r\n              color: \"#00C58D\",\r\n              backgroundColor: \"#f7f7f7\",\r\n              borderRadius: \"50px 0 0 50px\",\r\n            }}\r\n            onClick={onMenuItemClick}\r\n          >\r\n            {menu.icon ? <Svg>{menu.icon}</Svg> : \"\"}\r\n            {menu.name}\r\n          </NavLink>\r\n        ))}\r\n      </MenuWrapper>\r\n\r\n      <LogoutBtn\r\n        onClick={() => {\r\n          //   signout();\r\n        }}\r\n      >\r\n        <Svg>\r\n          <LogoutIcon />\r\n        </Svg>\r\n        Logout\r\n      </LogoutBtn>\r\n    </SidebarWrapper>\r\n  );\r\n});\r\n","P:\\moonvella-ecommerce\\src\\context\\DrawerContext.js",[],"P:\\moonvella-ecommerce\\src\\components\\CategoryCard\\CategoryCard.js",[],"P:\\moonvella-ecommerce\\src\\components\\ProductCard\\ProductCard.js",[],"P:\\moonvella-ecommerce\\src\\pages\\DrawerItems\\DrawerItems.js",[],"P:\\moonvella-ecommerce\\src\\components\\FeaturedProductCard\\FeaturedProductCard.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Shop\\FilterPage\\ProductFilter.js",["462"],"import React from \"react\";\r\nimport \"./ProductFilter.scss\";\r\nimport Input from \"../../../components/Input/Input\";\r\nimport Button from \"../../../components/Button/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Checkbox from \"../../../components/CheckBox/CheckBox\";\r\n// import RadioField from \"../../../components/Radio/Radio\";\r\nimport { Radio, RadioGroup } from \"baseui/radio\";\r\n\r\nfunction ProductFilter() {\r\n  const handleCheckbox = (event) => {\r\n    const { name } = event.currentTarget;\r\n    // if (!checkedId.includes(parseInt(name))) {\r\n    //   setCheckedId((prevState) => [...prevState, parseInt(name)]);\r\n    // } else {\r\n    //   setCheckedId((prevState) => prevState.filter((id) => id !== parseInt(name)));\r\n    // }\r\n  };\r\n  return (\r\n    <div className=\"filter-wrapper\">\r\n      <div className=\"filter-header\">\r\n        <p>Current Matches(600,800)</p>\r\n        <hr />\r\n      </div>\r\n      <div className=\"filter-content\">\r\n        <div className=\"filter-category\">\r\n          <label>Categories</label>\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-item\">\r\n              <Link to=\"\"> All Categories(250)</Link>\r\n            </li>\r\n            <li className=\"list-item\">\r\n              <Link to=\"\"> phone(52)</Link>\r\n            </li>\r\n            <li className=\"list-item\">\r\n              <Link to=\"\"> camera(57)</Link>\r\n            </li>\r\n            <li className=\"list-item\">\r\n              <Link to=\"\"> camera(57)</Link>\r\n            </li>\r\n            <li className=\"list-item\">\r\n              <Link to=\"\"> camera(57)</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <hr />\r\n        <div className=\"filter-price\">\r\n          <label>Price</label>\r\n          <div className=\"d-flex justify-content-between\">\r\n            <Input type=\"text\" placeholder=\"Min\" />\r\n            <p className=\"ml-1 mr-1 mt-1\">-</p>\r\n            <Input type=\"text\" placeholder=\"Max\" />\r\n            <Button\r\n              type=\"button\"\r\n              overrides={{\r\n                BaseButton: {\r\n                  style: () => ({\r\n                    borderTopLeftRadius: \"3px\",\r\n                    borderTopRightRadius: \"3px\",\r\n                    borderBottomRightRadius: \"3px\",\r\n                    borderBottomLeftRadius: \"3px\",\r\n                    marginLeft: \"10px\",\r\n                  }),\r\n                },\r\n              }}\r\n            >\r\n              Update\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"filter-brand\">\r\n          <label>Brand</label>\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-item\">\r\n              <Checkbox\r\n                type=\"checkbox\"\r\n                name=\"aa\"\r\n                checked={false}\r\n                onChange={handleCheckbox}\r\n                // overrides={{\r\n                //   Checkmark: {\r\n                //     style: {\r\n                //       borderTopWidth: \"2px\",\r\n                //       borderRightWidth: \"2px\",\r\n                //       borderBottomWidth: \"2px\",\r\n                //       borderLeftWidth: \"2px\",\r\n                //       borderTopLeftRadius: \"4px\",\r\n                //       borderTopRightRadius: \"4px\",\r\n                //       borderBottomRightRadius: \"4px\",\r\n                //       borderBottomLeftRadius: \"4px\",\r\n                //     },\r\n                //   },\r\n                // }}\r\n              >\r\n                Nike\r\n              </Checkbox>\r\n            </li>\r\n            <li className=\"list-item\">\r\n              <Checkbox>Nike</Checkbox>\r\n            </li>\r\n            <li className=\"list-item\">\r\n              <Checkbox>Nike</Checkbox>\r\n            </li>\r\n            <li className=\"list-item\">\r\n              <Checkbox>Nike</Checkbox>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <hr />\r\n        <div className=\"filter-sort-by\">\r\n          <label>Sort By</label>\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-item\">\r\n              <RadioGroup name=\"overrides\">\r\n                <Radio value=\"1\">Best Match</Radio>\r\n                <Radio value=\"1\">Lowest Price</Radio>\r\n                <Radio value=\"1\">Highest Price</Radio>\r\n              </RadioGroup>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductFilter;\r\n","P:\\moonvella-ecommerce\\src\\assets\\icons\\Plus.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\Trash.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\CustomerIcon.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\CoinIcon.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\CouponIcon.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\ArrowPrev.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\DeliveryIcon.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\ArrowNext.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\UserIcon.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\CartIconBig.js",[],"P:\\moonvella-ecommerce\\src\\components\\Widgets\\ColumnChart\\ColumnChart.js",[],"P:\\moonvella-ecommerce\\src\\components\\Widgets\\StickerCard\\StickerCard.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Layout\\HomeLayout\\Header\\index.js",["463","464"],"import React, { useState, useEffect } from \"react\";\r\nimport Search from \"../../../../features/search/search\";\r\nimport { LeftMenu } from \"../LeftMenu/LeftMenu\";\r\nimport { RightMenu } from \"../RightMenu/RightMenu\";\r\nimport \"./index.scss\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header-wrapper\" id=\"layout-header\">\r\n      <LeftMenu />\r\n      <Search minimal={true} className=\"headerSearch\" />\r\n      <RightMenu />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","P:\\moonvella-ecommerce\\src\\pages\\Layout\\HomeLayout\\Footer\\index.js",[],"P:\\moonvella-ecommerce\\src\\settings\\debounce.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\CaretDownIcon.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\NotificationIcon.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Layout\\Topbar\\Topbar.style.js",[],"P:\\moonvella-ecommerce\\src\\context\\create-context.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\AlertDotIcon.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\MenuIcon.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\ArrowLeftRound.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\MessageIcon.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Layout\\Sidebar\\Sidebar.style.js",[],"P:\\moonvella-ecommerce\\src\\components\\Button\\Button.style.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\CloseIcon.js",[],"P:\\moonvella-ecommerce\\src\\components\\ProductCard\\ProductCard.style.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\SidebarCategoryIcon.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\ProductIcon.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\OrderIcon.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\SettingIcon.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\DashboardIcon.js",[],"P:\\moonvella-ecommerce\\src\\components\\Popover\\Popover.js",[],"P:\\moonvella-ecommerce\\src\\components\\Drawer\\Drawer.js",[],"P:\\moonvella-ecommerce\\src\\components\\Notification\\Notification.js",[],"P:\\moonvella-ecommerce\\src\\pages\\CategoryForm\\CategoryForm.js",[],"P:\\moonvella-ecommerce\\src\\pages\\ProductForm\\ProductForm.js",["465","466","467","468","469","470","471","472"],"import React, { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nimport DrawerContext from \"../../context/DrawerContext\";\r\nimport ProductContext from \"../../context/ProductContext\";\r\nimport Uploader from \"../../components/Uploader/Uploader\";\r\nimport Button, { KIND } from \"../../components/Button/Button\";\r\nimport DrawerBox from \"../../components/DrawerBox/DrawerBox\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport { Textarea } from \"../../components/Textarea/Textarea\";\r\nimport Select from \"../../components/Select/Select\";\r\n\r\nimport { FormFields, FormLabel } from \"../../components/FormFields/FormFields\";\r\n\r\nimport { Form, DrawerTitleWrapper, DrawerTitle, FieldDetails, ButtonGroup } from \"../DrawerItems/DrawerItems.style\";\r\nimport Switch from \"react-switch\";\r\n\r\nimport VariantForm from \"./VariantForm\";\r\nimport OptionsForm from \"./OptionsForm\";\r\nimport \"./ProductForm.css\";\r\nconst options = [\r\n  { value: \"Fruits & Vegetables\", name: \"Fruits & Vegetables\", id: \"1\" },\r\n  { value: \"Meat & Fish\", name: \"Meat & Fish\", id: \"2\" },\r\n  { value: \"Purse\", name: \"Purse\", id: \"3\" },\r\n  { value: \"Hand bags\", name: \"Hand bags\", id: \"4\" },\r\n  { value: \"Shoulder bags\", name: \"Shoulder bags\", id: \"5\" },\r\n  { value: \"Wallet\", name: \"Wallet\", id: \"6\" },\r\n  { value: \"Laptop bags\", name: \"Laptop bags\", id: \"7\" },\r\n  { value: \"Women Dress\", name: \"Women Dress\", id: \"8\" },\r\n  { value: \"Outer Wear\", name: \"Outer Wear\", id: \"9\" },\r\n  { value: \"Pants\", name: \"Pants\", id: \"10\" },\r\n];\r\n\r\nconst typeOptions = [\r\n  { value: \"grocery\", name: \"Grocery\", id: \"1\" },\r\n  { value: \"women-cloths\", name: \"Women Cloths\", id: \"2\" },\r\n  { value: \"bags\", name: \"Bags\", id: \"3\" },\r\n  { value: \"makeup\", name: \"Makeup\", id: \"4\" },\r\n];\r\n\r\nlet arrayContextOptions = [];\r\nconst AddProduct = (props) => {\r\n  const dispatch = DrawerContext.useDrawerDispatch();\r\n  const dispatch1 = ProductContext.useProductDispatch();\r\n  const closeDrawer = useCallback(() => {\r\n    dispatch({ type: \"CLOSE_DRAWER\" });\r\n    dispatch1({ type: \"CLOSE_PRODUCT\" });\r\n    arrayContextOptions = [];\r\n  }, [dispatch, dispatch1]);\r\n\r\n  const { register, handleSubmit, setValue } = useForm();\r\n  const [type, setType] = useState([]);\r\n  const [tag, setTag] = useState([]);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [variants, setVariants] = useState([]);\r\n  const [variantOptions, setVariantOptions] = useState([]);\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const tagValues = ProductContext.useProductState(\"optionTags\");\r\n  const optionType = ProductContext.useProductState(\"optionType\");\r\n  useEffect(() => {\r\n    const theItem = arrayContextOptions.find(({ type, tags }) => type === optionType);\r\n    if (theItem)\r\n      arrayContextOptions = arrayContextOptions.map((item) => {\r\n        if (item.type === optionType) {\r\n          return { type: optionType, tags: tagValues };\r\n        }\r\n        return item;\r\n      });\r\n    else {\r\n      if (optionType || tagValues) {\r\n        arrayContextOptions = [...arrayContextOptions, { type: optionType, tags: tagValues }];\r\n      }\r\n    }\r\n\r\n    tagValues && addVariant();\r\n    register({ name: \"type\" });\r\n    register({ name: \"categories\" });\r\n    register({ name: \"description\" });\r\n  }, [register, tagValues, optionType]);\r\n\r\n  const handleUploader = (files) => {\r\n    // setValue(\"image\", files[0].path);\r\n  };\r\n\r\n  const handleDescriptionChange = (e) => {\r\n    const value = e.target.value;\r\n    setValue(\"description\", value);\r\n    setDescription(value);\r\n  };\r\n\r\n  const handleMultiChange = ({ value }) => {\r\n    setValue(\"categories\", value);\r\n    setTag(value);\r\n  };\r\n\r\n  const handleTypeChange = ({ value }) => {\r\n    setValue(\"type\", value);\r\n    setType(value);\r\n  };\r\n\r\n  const handleVariantRemove = (variantId) => {\r\n    let removedVariants = variants.filter((variant, index) => index !== variantId);\r\n    setVariants(removedVariants);\r\n  };\r\n\r\n  const addVariant = () => {\r\n    let newOptions = [];\r\n    let tempOptions = [];\r\n    arrayContextOptions.map((option) => {\r\n      tempOptions = [];\r\n      option.tags.map((tag) => {\r\n        tempOptions.push([{ type: option.type[0].value, tag: tag }]);\r\n      });\r\n      newOptions = [...newOptions, tempOptions];\r\n    });\r\n\r\n    // newOptions = [[[{ tag: \"M\" }, { type: \"size\" }]], [[{ tag: \"L\" }, { type: \"size\" }]]];\r\n    // console.log(allPossibleOptions(newOptions));\r\n    setVariants(allPossibleOptions(newOptions));\r\n  };\r\n\r\n  const allPossibleOptions = (items, isCombination = false) => {\r\n    // finding all possible combinations of the last 2 items\r\n    // remove those 2, add these combinations\r\n    // isCombination shows if the last element is itself part of the combination series\r\n    if (items.length == 1) {\r\n      return items[0];\r\n    } else if (items.length == 2) {\r\n      var combinations = [];\r\n      for (var i = 0; i < items[1].length; i++) {\r\n        for (var j = 0; j < items[0].length; j++) {\r\n          if (isCombination) {\r\n            // clone array to not modify original array\r\n            var combination = items[1][i].slice();\r\n            combination.push(items[0][j]);\r\n          } else {\r\n            var combination = [items[1][i], items[0][j]];\r\n          }\r\n          combinations.push(combination);\r\n        }\r\n      }\r\n      return combinations;\r\n    } else if (items.length > 2) {\r\n      var last2 = items.slice(-2);\r\n      var butLast2 = items.slice(0, items.length - 2);\r\n      last2 = allPossibleOptions(last2, isCombination);\r\n      butLast2.push(last2);\r\n      var combinations = butLast2;\r\n      return allPossibleOptions(combinations, (isCombination = true));\r\n    }\r\n  };\r\n\r\n  const handleVariantChange = (checked) => {\r\n    if (checked) {\r\n      setVariantOptions([variantOptions.length + 1]);\r\n    } else {\r\n      setVariantOptions([]);\r\n      setVariants([]);\r\n      arrayContextOptions = [];\r\n    }\r\n    setChecked(checked);\r\n  };\r\n\r\n  const getMaxIndex = (arr) => {\r\n    let getArrayMax = null;\r\n    if (arr.length) {\r\n      getArrayMax = Math.max.apply(null, arr);\r\n    } else {\r\n      getArrayMax = 0;\r\n    }\r\n    return getArrayMax;\r\n  };\r\n\r\n  const handleClickAddOption = () => {\r\n    let optionIndex = getMaxIndex(variantOptions) + 1;\r\n    setVariantOptions([...variantOptions, optionIndex]);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n\r\n    // const newProduct = {\r\n    //   id: uuidv4(),\r\n    //   name: data.name,\r\n    //   type: data.type[0].value,\r\n    //   description: data.description,\r\n    //   image: data.image && data.image.length !== 0 ? data.image : \"\",\r\n    //   price: Number(data.price),\r\n    //   unit: data.unit,\r\n    //   salePrice: Number(data.salePrice),\r\n    //   discountInPercent: Number(data.discountInPercent),\r\n    //   quantity: Number(data.quantity),\r\n    //   slug: data.name,\r\n    //   creation_date: new Date(),\r\n    // };\r\n    // console.log(newProduct, \"newProduct data\");\r\n    // createProduct({\r\n    //   variables: { product: newProduct },\r\n    // });\r\n    // closeDrawer();\r\n  };\r\n\r\n  const onOptionRemove = (i) => {\r\n    let optionIndexArray = variantOptions.filter((option) => option !== i);\r\n    console.log(optionIndexArray);\r\n    setVariantOptions(optionIndexArray);\r\n  };\r\n\r\n  // console.log(variants);\r\n  return (\r\n    <>\r\n      <DrawerTitleWrapper>\r\n        <DrawerTitle>Add Product</DrawerTitle>\r\n      </DrawerTitleWrapper>\r\n\r\n      <Form onSubmit={handleSubmit(onSubmit)} style={{ height: \"100%\" }}>\r\n        <Scrollbars\r\n          autoHide\r\n          renderView={(props) => <div {...props} style={{ ...props.style, overflowX: \"hidden\" }} />}\r\n          renderTrackHorizontal={(props) => <div {...props} style={{ display: \"none\" }} className=\"track-horizontal\" />}\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-2\">\r\n              <FieldDetails>Upload your Product image here</FieldDetails>\r\n            </div>\r\n            <div className=\"col-lg-10\">\r\n              <DrawerBox\r\n                overrides={{\r\n                  Block: {\r\n                    style: {\r\n                      width: \"100%\",\r\n                      height: \"auto\",\r\n                      padding: \"30px\",\r\n                      borderRadius: \"3px\",\r\n                      backgroundColor: \"#ffffff\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    },\r\n                  },\r\n                }}\r\n              >\r\n                <Uploader onChange={handleUploader} />\r\n              </DrawerBox>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-2\">\r\n              <FieldDetails>Add your Product description and necessary information from here</FieldDetails>\r\n            </div>\r\n\r\n            <div className=\"col-lg-10\">\r\n              <DrawerBox>\r\n                <FormFields>\r\n                  <FormLabel>Title</FormLabel>\r\n                  <Input inputRef={register({ required: true, maxLength: 20 })} name=\"name\" />\r\n                </FormFields>\r\n\r\n                <FormFields>\r\n                  <FormLabel>Description</FormLabel>\r\n                  <Textarea\r\n                    value={description}\r\n                    onChange={handleDescriptionChange}\r\n                    overrides={{\r\n                      Input: {\r\n                        style: ({ $theme }) => ({\r\n                          height: \"150px\",\r\n                        }),\r\n                      },\r\n                    }}\r\n                  />\r\n                </FormFields>\r\n\r\n                <FormFields>\r\n                  <FormLabel>Type</FormLabel>\r\n                  <Select\r\n                    options={typeOptions}\r\n                    labelKey=\"name\"\r\n                    valueKey=\"value\"\r\n                    placeholder=\"Product Type\"\r\n                    value={type}\r\n                    searchable={false}\r\n                    onChange={handleTypeChange}\r\n                    overrides={{\r\n                      Placeholder: {\r\n                        style: ({ $theme }) => {\r\n                          return {\r\n                            ...$theme.typography.fontBold14,\r\n                            color: $theme.colors.textNormal,\r\n                          };\r\n                        },\r\n                      },\r\n                      DropdownListItem: {\r\n                        style: ({ $theme }) => {\r\n                          return {\r\n                            ...$theme.typography.fontBold14,\r\n                            color: $theme.colors.textNormal,\r\n                          };\r\n                        },\r\n                      },\r\n                      OptionContent: {\r\n                        style: ({ $theme, $selected }) => {\r\n                          return {\r\n                            ...$theme.typography.fontBold14,\r\n                            color: $selected ? $theme.colors.textDark : $theme.colors.textNormal,\r\n                          };\r\n                        },\r\n                      },\r\n                      SingleValue: {\r\n                        style: ({ $theme }) => {\r\n                          return {\r\n                            ...$theme.typography.fontBold14,\r\n                            color: $theme.colors.textNormal,\r\n                          };\r\n                        },\r\n                      },\r\n                      Popover: {\r\n                        props: {\r\n                          overrides: {\r\n                            Body: {\r\n                              style: { zIndex: 5 },\r\n                            },\r\n                          },\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </FormFields>\r\n\r\n                <FormFields>\r\n                  <FormLabel>Categories</FormLabel>\r\n                  <Select\r\n                    options={options}\r\n                    labelKey=\"name\"\r\n                    valueKey=\"value\"\r\n                    placeholder=\"Product Tag\"\r\n                    value={tag}\r\n                    onChange={handleMultiChange}\r\n                    overrides={{\r\n                      Placeholder: {\r\n                        style: ({ $theme }) => {\r\n                          return {\r\n                            ...$theme.typography.fontBold14,\r\n                            color: $theme.colors.textNormal,\r\n                          };\r\n                        },\r\n                      },\r\n                      DropdownListItem: {\r\n                        style: ({ $theme }) => {\r\n                          return {\r\n                            ...$theme.typography.fontBold14,\r\n                            color: $theme.colors.textNormal,\r\n                          };\r\n                        },\r\n                      },\r\n                      Popover: {\r\n                        props: {\r\n                          overrides: {\r\n                            Body: {\r\n                              style: { zIndex: 5 },\r\n                            },\r\n                          },\r\n                        },\r\n                      },\r\n                    }}\r\n                    multi\r\n                  />\r\n                </FormFields>\r\n                <div className=\"default-pricing\">\r\n                  <div className=\"row mb-3\">\r\n                    <div className=\"col-lg-4\">\r\n                      <FormFields>\r\n                        <FormLabel>Price</FormLabel>\r\n                        <Input type=\"number\" inputRef={register({ required: true })} name=\"defaultPrice\" />\r\n                      </FormFields>\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                      <FormFields>\r\n                        <FormLabel>Unit</FormLabel>\r\n                        <Input type=\"text\" inputRef={register} name=\"unit\" />\r\n                      </FormFields>\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                      <FormFields>\r\n                        <FormLabel>Compare Price</FormLabel>\r\n                        <Input type=\"number\" inputRef={register({ required: true })} name=\"defaultComparePrice\" />\r\n                      </FormFields>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                      <FormFields>\r\n                        <FormLabel>SKU(Stock Keeping Unit)</FormLabel>\r\n                        <Input type=\"text\" inputRef={register} name=\"defaultSKU\" />\r\n                      </FormFields>\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                      <FormFields>\r\n                        <FormLabel>Barcode (ISBN, UPC, GTIN, etc.)</FormLabel>\r\n                        <Input type=\"text\" inputRef={register} name=\"defaultBarcode\" />\r\n                      </FormFields>\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                      <FormFields>\r\n                        <FormLabel>Quantity</FormLabel>\r\n                        <Input type=\"number\" inputRef={register({ required: true })} name=\"defaultQuantity\" />\r\n                      </FormFields>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <FormFields>\r\n                  <FormLabel>Variant</FormLabel>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <span style={{ color: \"#161f6a\" }}>\r\n                      This product has multiple options, like different sizes or colors\r\n                    </span>\r\n                    <Switch\r\n                      onChange={handleVariantChange}\r\n                      checked={checked}\r\n                      onColor=\"#37ffc6\"\r\n                      onHandleColor=\"#00c58d\"\r\n                      handleDiameter={30}\r\n                      uncheckedIcon={false}\r\n                      checkedIcon={false}\r\n                      boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                      activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                      height={20}\r\n                      width={48}\r\n                      className=\"react-switch\"\r\n                      id=\"material-switch\"\r\n                    />\r\n                  </div>\r\n                </FormFields>\r\n\r\n                {variantOptions.map((option, index) => {\r\n                  return (\r\n                    <OptionsForm key={option} index={index + 1} optionId={option} onOptionRemove={onOptionRemove} />\r\n                  );\r\n                })}\r\n\r\n                {variantOptions.length > 0 && variantOptions.length < 3 ? (\r\n                  <FormFields>\r\n                    <Button\r\n                      onClick={handleClickAddOption}\r\n                      type=\"button\"\r\n                      overrides={{\r\n                        BaseButton: {\r\n                          style: ({ $theme }) => ({\r\n                            width: \"23%\",\r\n                            borderTopLeftRadius: \"3px\",\r\n                            borderTopRightRadius: \"3px\",\r\n                            borderBottomRightRadius: \"3px\",\r\n                            borderBottomLeftRadius: \"3px\",\r\n                          }),\r\n                        },\r\n                      }}\r\n                    >\r\n                      Add another option\r\n                    </Button>\r\n                  </FormFields>\r\n                ) : (\r\n                  <FormFields></FormFields>\r\n                )}\r\n                {variants.map((variant, index) => (\r\n                  <VariantForm\r\n                    key={index}\r\n                    variantIndex={index}\r\n                    useRegister={register}\r\n                    useSetValue={setValue}\r\n                    handleVariantRemove={handleVariantRemove}\r\n                    contextVariant={variant}\r\n                  />\r\n                ))}\r\n              </DrawerBox>\r\n            </div>\r\n          </div>\r\n        </Scrollbars>\r\n\r\n        <ButtonGroup>\r\n          <Button\r\n            kind={KIND.minimal}\r\n            onClick={closeDrawer}\r\n            type=\"button\"\r\n            overrides={{\r\n              BaseButton: {\r\n                style: ({ $theme }) => ({\r\n                  width: \"50%\",\r\n                  borderTopLeftRadius: \"3px\",\r\n                  borderTopRightRadius: \"3px\",\r\n                  borderBottomRightRadius: \"3px\",\r\n                  borderBottomLeftRadius: \"3px\",\r\n                  marginRight: \"15px\",\r\n                  color: $theme.colors.red400,\r\n                }),\r\n              },\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            overrides={{\r\n              BaseButton: {\r\n                style: ({ $theme }) => ({\r\n                  width: \"50%\",\r\n                  borderTopLeftRadius: \"3px\",\r\n                  borderTopRightRadius: \"3px\",\r\n                  borderBottomRightRadius: \"3px\",\r\n                  borderBottomLeftRadius: \"3px\",\r\n                }),\r\n              },\r\n            }}\r\n          >\r\n            Create Product\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n","P:\\moonvella-ecommerce\\src\\assets\\icons\\LogoutIcon.js",[],"P:\\moonvella-ecommerce\\src\\pages\\MailForm\\MailForm.js",["473"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport DrawerContext from \"../../context/DrawerContext\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport { Textarea } from \"../../components/Textarea/Textarea\";\r\nimport Button, { KIND } from \"../../components/Button/Button\";\r\nimport DrawerBox from \"../../components/DrawerBox/DrawerBox\";\r\nimport { Form, DrawerTitleWrapper, DrawerTitle, FieldDetails, ButtonGroup } from \"../DrawerItems/DrawerItems.style\";\r\nimport { FormFields, FormLabel } from \"../../components/FormFields/FormFields\";\r\n\r\nconst MailForm = (props) => {\r\n  const dispatch = DrawerContext.useDrawerDispatch();\r\n  const closeDrawer = useCallback(() => dispatch({ type: \"CLOSE_DRAWER\" }), [dispatch]);\r\n  const { register, handleSubmit, setValue } = useForm();\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    register({ name: \"message\" });\r\n  }, [register]);\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    closeDrawer();\r\n  };\r\n  const handleMessageChange = (e) => {\r\n    const value = e.target.value;\r\n    setValue(\"message\", value);\r\n    setMessage(value);\r\n  };\r\n  return (\r\n    <>\r\n      <DrawerTitleWrapper>\r\n        <DrawerTitle>Compose Message</DrawerTitle>\r\n      </DrawerTitleWrapper>\r\n\r\n      <Form onSubmit={handleSubmit(onSubmit)} style={{ height: \"100%\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <DrawerBox>\r\n              <FormFields>\r\n                <FormLabel>To:</FormLabel>\r\n                <Input type=\"email\" inputRef={register({ required: true, maxLength: 20 })} name=\"to\" />\r\n              </FormFields>\r\n\r\n              <FormFields>\r\n                <FormLabel>Subject:</FormLabel>\r\n                <Input inputRef={register({ required: true, maxLength: 50 })} name=\"subject\" />\r\n              </FormFields>\r\n              <FormFields>\r\n                <FormLabel>Your Message:</FormLabel>\r\n                <Textarea value={message} onChange={handleMessageChange} />\r\n              </FormFields>\r\n            </DrawerBox>\r\n          </div>\r\n        </div>\r\n        <ButtonGroup>\r\n          <Button\r\n            kind={KIND.minimal}\r\n            onClick={closeDrawer}\r\n            overrides={{\r\n              BaseButton: {\r\n                style: ({ $theme }) => ({\r\n                  width: \"50%\",\r\n                  borderTopLeftRadius: \"3px\",\r\n                  borderTopRightRadius: \"3px\",\r\n                  borderBottomRightRadius: \"3px\",\r\n                  borderBottomLeftRadius: \"3px\",\r\n                  marginRight: \"15px\",\r\n                  color: $theme.colors.red400,\r\n                }),\r\n              },\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            overrides={{\r\n              BaseButton: {\r\n                style: ({ $theme }) => ({\r\n                  width: \"50%\",\r\n                  borderTopLeftRadius: \"3px\",\r\n                  borderTopRightRadius: \"3px\",\r\n                  borderBottomRightRadius: \"3px\",\r\n                  borderBottomLeftRadius: \"3px\",\r\n                }),\r\n              },\r\n            }}\r\n          >\r\n            Send\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MailForm;\r\n","P:\\moonvella-ecommerce\\src\\assets\\icons\\ArrowUp.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\ArrowDown.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\IosArrowUp.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\IosArrowDown.js",[],"P:\\moonvella-ecommerce\\src\\components\\Widgets\\ColumnChart\\ColumnChart.style.js",[],"P:\\moonvella-ecommerce\\src\\components\\Widgets\\StickerCard\\StickerCard.style.js",[],"P:\\moonvella-ecommerce\\src\\components\\Charts\\Chart.js",[],"P:\\moonvella-ecommerce\\src\\components\\Box\\Box.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Layout\\HomeLayout\\LeftMenu\\LeftMenu.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Layout\\HomeLayout\\RightMenu\\RightMenu.js",[],"P:\\moonvella-ecommerce\\src\\features\\search\\search.js",["474"],"import React from \"react\";\r\nimport { SearchBox } from \"../../components/SearchBox/SearchBox\";\r\n\r\nfunction Search({ onSubmit, ...props }) {\r\n  const handleOnChange = (e) => {\r\n    const { value } = e.target;\r\n  };\r\n\r\n  const onSearch = (e) => {};\r\n  return (\r\n    <SearchBox\r\n      onEnter={onSearch}\r\n      onChange={handleOnChange}\r\n      value=\"\"\r\n      name=\"search\"\r\n      placeholder=\"Search your products from here\"\r\n      categoryType=\"bakery\"\r\n      buttonText=\"Search\"\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","P:\\moonvella-ecommerce\\src\\components\\Notification\\Notification.style.js",[],"P:\\moonvella-ecommerce\\src\\pages\\ProductForm\\OptionsForm.js",["475"],"import React, { useState, useEffect } from \"react\";\r\nimport { FormFields, FormLabel } from \"../../components/FormFields/FormFields\";\r\nimport CreateTags from \"../../components/Tags/CreateTags\";\r\nimport Select from \"../../components/Select/Select\";\r\n\r\nconst variantOptionsType = [\r\n  { name: \"Size\", value: \"size\", id: \"1\" },\r\n  { name: \"Color\", value: \"color\", id: \"2\" },\r\n  { name: \"Style\", value: \"style\", id: \"3\" },\r\n  { name: \"Title\", value: \"title\", id: \"4\" },\r\n];\r\nfunction OptionsForm({ index, optionId, onOptionRemove }) {\r\n  const [type, setType] = useState([variantOptionsType[0]]);\r\n\r\n  useEffect(() => {\r\n    if (index > 1) {\r\n    } else {\r\n    }\r\n  }, []);\r\n\r\n  const handleOptionChange = ({ value }) => {\r\n    // setValue(\"type\", value);\r\n    setType(value);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col-lg-4\">\r\n          <FormFields>\r\n            <FormLabel>{`Option${index}`}</FormLabel>\r\n            <Select\r\n              options={variantOptionsType}\r\n              labelKey=\"name\"\r\n              valueKey=\"value\"\r\n              placeholder=\"Variant Type\"\r\n              value={type}\r\n              searchable={false}\r\n              onChange={handleOptionChange}\r\n              overrides={{\r\n                Placeholder: {\r\n                  style: ({ $theme }) => {\r\n                    return {\r\n                      ...$theme.typography.fontBold14,\r\n                      color: $theme.colors.textNormal,\r\n                    };\r\n                  },\r\n                },\r\n                DropdownListItem: {\r\n                  style: ({ $theme }) => {\r\n                    return {\r\n                      ...$theme.typography.fontBold14,\r\n                      color: $theme.colors.textNormal,\r\n                    };\r\n                  },\r\n                },\r\n                OptionContent: {\r\n                  style: ({ $theme, $selected }) => {\r\n                    return {\r\n                      ...$theme.typography.fontBold14,\r\n                      color: $selected ? $theme.colors.textDark : $theme.colors.textNormal,\r\n                    };\r\n                  },\r\n                },\r\n                SingleValue: {\r\n                  style: ({ $theme }) => {\r\n                    return {\r\n                      ...$theme.typography.fontBold14,\r\n                      color: $theme.colors.textNormal,\r\n                    };\r\n                  },\r\n                },\r\n                Popover: {\r\n                  props: {\r\n                    overrides: {\r\n                      Body: {\r\n                        style: { zIndex: 5 },\r\n                      },\r\n                    },\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          </FormFields>\r\n        </div>\r\n        <div className=\"col-lg-8\">\r\n          <FormFields>\r\n            {index > 1 ? (\r\n              <div className=\"d-flex justify-content-end mb-n1\">\r\n                <button type=\"button\" className=\"btn-remove\" onClick={() => onOptionRemove(optionId)}>\r\n                  Remove\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <FormLabel>&nbsp;</FormLabel>\r\n            )}\r\n\r\n            <CreateTags selectedType={type} />\r\n          </FormFields>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OptionsForm;\r\n","P:\\moonvella-ecommerce\\src\\pages\\DrawerItems\\DrawerItems.style.js",[],"P:\\moonvella-ecommerce\\src\\pages\\ProductForm\\VariantForm.js",["476","477","478","479","480","481"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport DrawerBox from \"../../components/DrawerBox/DrawerBox\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport { FormFields, FormLabel } from \"../../components/FormFields/FormFields\";\r\n\r\nimport { FileLibraryListItem, ReactMediaLibrary, FileMeta } from \"react-media-library-daniel-daleva\";\r\n\r\nfunction VariantForm({ variantIndex, useRegister, useSetValue, handleVariantRemove, contextVariant }) {\r\n  const setValue = useSetValue;\r\n  const register = useRegister;\r\n  const uploadImage = useRef();\r\n  const [previewImage, setPreviewImage] = useState();\r\n\r\n  const [display, setDisplay] = useState(false);\r\n  const [fileLibraryList, setFileLibraryList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    register({ name: `image${variantIndex}` });\r\n    setFileLibraryList([\r\n      {\r\n        _id: 1,\r\n        thumbnailUrl:\r\n          \"https://media-exp1.licdn.com/dms/image/sync/C4D18AQE2jWv7y_cZVA/companyUpdate-article-image-shrink_627_1200/0/1611222205245?e=1614816000&v=beta&t=FurfMOvjwvuzsMJop9caguRshtD1jo9zCRogIIp59ZY\",\r\n      },\r\n      {\r\n        _id: 2,\r\n        thumbnailUrl:\r\n          \"https://media-exp1.licdn.com/dms/image/sync/C4D18AQE2jWv7y_cZVA/companyUpdate-article-image-shrink_627_1200/0/1611222205245?e=1614816000&v=beta&t=FurfMOvjwvuzsMJop9caguRshtD1jo9zCRogIIp59ZY\",\r\n      },\r\n      {\r\n        _id: 3,\r\n        thumbnailUrl:\r\n          \"https://media-exp1.licdn.com/dms/image/sync/C4D18AQE2jWv7y_cZVA/companyUpdate-article-image-shrink_627_1200/0/1611222205245?e=1614816000&v=beta&t=FurfMOvjwvuzsMJop9caguRshtD1jo9zCRogIIp59ZY\",\r\n      },\r\n      {\r\n        _id: 4,\r\n        thumbnailUrl:\r\n          \"https://media-exp1.licdn.com/dms/image/sync/C4D18AQE2jWv7y_cZVA/companyUpdate-article-image-shrink_627_1200/0/1611222205245?e=1614816000&v=beta&t=FurfMOvjwvuzsMJop9caguRshtD1jo9zCRogIIp59ZY\",\r\n      },\r\n    ]);\r\n    setIsLoading(false);\r\n  }, [register]);\r\n\r\n  const handleUploader = (e) => {\r\n    setPreviewImage(URL.createObjectURL(e.target.files[0]));\r\n    setValue(`image${variantIndex}`, e.target.files[0].name);\r\n  };\r\n\r\n  const handleClickImage = (e) => {\r\n    uploadImage.current.click();\r\n  };\r\n\r\n  const handleClickRemove = (i) => {\r\n    handleVariantRemove(i);\r\n  };\r\n\r\n  async function uploadCallback(fileBase64, fileMeta) {\r\n    // const result = await fileUpload(fileBase64, fileMeta);\r\n    // if (result.success) {\r\n    //     const newFileList = await getNewFileList();\r\n    //     setFileLibraryList(newFileList);\r\n    //     return true;\r\n    // } else {\r\n    //     return false;\r\n    // }\r\n  }\r\n\r\n  function selectCallback(item) {\r\n    // Hide modal\r\n    setDisplay(false);\r\n    console.log(item);\r\n    // clientSelectCallback(item);\r\n  }\r\n\r\n  async function deleteCallback(item) {\r\n    // const result = await fileDelete(item);\r\n    // if (result.success) {\r\n    //     // Deleted file\r\n    //     // TODO Reacquire file list from database\r\n    //     const newFileList = await getNewFileList();\r\n    //     setFileLibraryList(newFileList);\r\n    // }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"variant-section\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            <DrawerBox\r\n              overrides={{\r\n                Block: {\r\n                  style: {\r\n                    width: \"100%\",\r\n                    height: \"auto\",\r\n                    borderRadius: \"3px\",\r\n                    backgroundColor: \"#ffffff\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  },\r\n                },\r\n              }}\r\n            >\r\n              {/* <div className=\"select-variant-image\" onClick={handleClickImage}> */}\r\n              <div className=\"select-variant-image\" onClick={() => setDisplay(true)}>\r\n                {previewImage ? <img src={previewImage} alt=\"upload image\" /> : <p>Select the variant image</p>}\r\n              </div>\r\n              {/* <input\r\n                type=\"file\"\r\n                // name={variantIndex.inputFileName}\r\n                onChange={handleUploader}\r\n                style={{ display: \"none\" }}\r\n                ref={uploadImage}\r\n              /> */}\r\n            </DrawerBox>\r\n          </div>\r\n\r\n          {contextVariant.map((v, index) => {\r\n            return (\r\n              <div className=\"col-lg-3\" key={index}>\r\n                <FormFields>\r\n                  <FormLabel>{v.length ? v[0].type.toUpperCase() : v.type.toUpperCase()}</FormLabel>\r\n                  <Input\r\n                    type=\"text\"\r\n                    inputRef={register({ required: true })}\r\n                    name={v.length ? v[0].type : v.tag + variantIndex}\r\n                    value={v.length ? v[0].tag : v.tag || \"\"}\r\n                  />\r\n                </FormFields>\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          {/* <div className=\"col-lg-4\">\r\n            <FormFields>\r\n              <FormLabel>Size</FormLabel>\r\n              <Input type=\"text\" inputRef={register({ required: true })} name={`size${variantIndex}`} />\r\n            </FormFields>\r\n          </div> */}\r\n        </div>\r\n        <div className=\"row mt-3\">\r\n          <div className=\"col-lg-3\">\r\n            <FormFields>\r\n              <FormLabel>Price</FormLabel>\r\n              <Input type=\"number\" inputRef={register({ required: true })} name={`price${variantIndex}`} />\r\n            </FormFields>\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <FormFields>\r\n              <FormLabel>Compare at price</FormLabel>\r\n              <Input type=\"number\" inputRef={register} name={`compareAtPrice${variantIndex}`} />\r\n            </FormFields>\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <FormFields>\r\n              <FormLabel>Product Quantity</FormLabel>\r\n              <Input type=\"number\" inputRef={register({ required: true })} name={`quantity${variantIndex}`} />\r\n            </FormFields>\r\n          </div>\r\n          <div className=\"col-lg-3 align-self-end\">\r\n            <button type=\"button\" className=\"btn btn-remove\" onClick={() => handleClickRemove(variantIndex)}>\r\n              Remove\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ReactMediaLibrary\r\n        isLoading={isLoading}\r\n        show={display}\r\n        onHide={() => setDisplay(false)}\r\n        fileUploadCallback={uploadCallback}\r\n        fileLibraryList={fileLibraryList}\r\n        fileSelectCallback={selectCallback}\r\n        fileDeleteCallback={deleteCallback}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VariantForm;\r\n","P:\\moonvella-ecommerce\\src\\components\\Image\\Image.js",[],"P:\\moonvella-ecommerce\\src\\components\\Notification\\NotificationCard.js",[],"P:\\moonvella-ecommerce\\src\\components\\DrawerBox\\DrawerBox.js",[],"P:\\moonvella-ecommerce\\src\\components\\Textarea\\Textarea.js",[],"P:\\moonvella-ecommerce\\src\\components\\Uploader\\Uploader.js",["482","483","484","485"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { styled } from \"baseui\";\r\nimport { UploadIcon } from \"../../assets/icons/UploadIcon\";\r\n\r\nconst Text = styled(\"span\", ({ $theme }) => ({\r\n  ...$theme.typography.font14,\r\n  fontFamily: $theme.typography.primaryFontFamily,\r\n  color: $theme.colors.textDark,\r\n  marginTop: \"15px\",\r\n  textAlign: \"center\",\r\n}));\r\n\r\nconst TextHighlighted = styled(\"span\", ({ $theme }) => ({\r\n  color: $theme.colors.primary,\r\n  fontWeight: \"bold\",\r\n}));\r\n\r\nconst Container = styled(\"div\", ({ props }) => ({\r\n  flex: \"1\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  padding: \"30px\",\r\n  borderWidth: \"2px\",\r\n  borderRadius: \"2px\",\r\n  borderColor: \"#E6E6E6\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#ffffff\",\r\n  color: \"#bdbdbd\",\r\n  outline: \"none\",\r\n  transition: \"border 0.24s ease-in-out\",\r\n  cursor: \"pointer\",\r\n}));\r\n\r\nconst ThumbsContainer = styled(\"aside\", () => ({\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  flexWrap: \"wrap\",\r\n  marginTop: \"16px\",\r\n}));\r\n\r\nconst Thumb = styled(\"div\", ({ $theme }) => ({\r\n  ...$theme.borders.borderEA,\r\n  display: \"inline-flex\",\r\n  borderRadius: \"2px\",\r\n  marginBottom: \"8px\",\r\n  marginRight: \"8px\",\r\n  width: \"100px\",\r\n  height: \"100px\",\r\n  padding: \"4px\",\r\n  boxSizing: \"border-box\",\r\n  // \":hover\": {\r\n  //   background: \"#000\",\r\n  //   zIndex: 999,\r\n  // },\r\n}));\r\n\r\nconst thumbInner = {\r\n  display: \"flex\",\r\n  minWidth: 0,\r\n  overflow: \"hidden\",\r\n};\r\n\r\nconst img = {\r\n  display: \"block\",\r\n  width: \"auto\",\r\n  height: \"100%\",\r\n};\r\n\r\nconst hoverDiv = {\r\n  position: \"absolute\",\r\n  zIndex: 11,\r\n  inset: \"0px\",\r\n  display: \"flex\",\r\n  flexFlow: \"column wrap\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  width: \"100px\",\r\n  height: \"100px\",\r\n  opacity: 1,\r\n  background: \"linear-gradient(rgba(33, 43, 54, 0.55), rgba(255, 255, 255, 0))\",\r\n  borderRadius: \"5px\",\r\n  cursor: \"pointer\",\r\n  left: \"61px\",\r\n  top: \"176px\",\r\n};\r\nfunction Uploader({ onChange, imageURL }) {\r\n  // const [files, setFiles] = useState(imageURL ? [{ name: \"demo\", preview: imageURL }] : []);\r\n  const [files, setFiles] = useState([]);\r\n  const [mediaFiles, setMediaFiles] = useState([]);\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \"image/*\",\r\n    multiple: true,\r\n    onDrop: useCallback(\r\n      (acceptedFiles) => {\r\n        console.log(acceptedFiles);\r\n        setFiles(\r\n          acceptedFiles.map((file) =>\r\n            Object.assign(file, {\r\n              preview: URL.createObjectURL(file),\r\n            })\r\n          )\r\n        );\r\n        onChange(acceptedFiles);\r\n      },\r\n      [onChange]\r\n    ),\r\n  });\r\n\r\n  const thumbs = mediaFiles.map((file, index) => {\r\n    return (\r\n      <Thumb key={index}>\r\n        {/* <div style={hoverDiv}></div> */}\r\n        <div style={thumbInner}>\r\n          <img src={file} style={img} />\r\n        </div>\r\n      </Thumb>\r\n    );\r\n  });\r\n\r\n  // useEffect(\r\n  //   () => () => {\r\n  //     // Make sure to revoke the data uris to avoid memory leaks\r\n  //     files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n  //   },\r\n  //   [files]\r\n  // );\r\n\r\n  useEffect(() => {\r\n    let medias = [];\r\n    if (files.length) {\r\n      files.map((file) => {\r\n        const fileReaderInstance = new FileReader();\r\n        fileReaderInstance.readAsDataURL(file);\r\n        fileReaderInstance.onload = () => {\r\n          let base64data = fileReaderInstance.result;\r\n          medias.push(base64data);\r\n          setMediaFiles([...mediaFiles, ...medias]);\r\n        };\r\n      });\r\n    }\r\n    files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n  }, [files]);\r\n\r\n  return (\r\n    <section className=\"container uploader\">\r\n      <Container {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <UploadIcon />\r\n        <Text>\r\n          <TextHighlighted>Drag/Upload</TextHighlighted> your image here.\r\n        </Text>\r\n      </Container>\r\n      {thumbs && <ThumbsContainer>{thumbs}</ThumbsContainer>}\r\n      {/* {thumbSingle && <ThumbsContainer>{thumbSingle}</ThumbsContainer>} */}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Uploader;\r\n","P:\\moonvella-ecommerce\\src\\components\\FormFields\\FormFields.js",[],"P:\\moonvella-ecommerce\\src\\components\\Box\\Box.style.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Layout\\HomeLayout\\LeftMenu\\LeftMenu.style.js",[],"P:\\moonvella-ecommerce\\src\\components\\SearchBox\\SearchBox.js",[],"P:\\moonvella-ecommerce\\src\\assets\\icons\\UploadIcon.js",[],"P:\\moonvella-ecommerce\\src\\components\\Tags\\CreateTags.js",["486","487"],"import * as React from \"react\";\r\nimport { useCallback } from \"react\";\r\nimport { useStyletron } from \"baseui\";\r\nimport { Input, StyledInput } from \"baseui/input\";\r\nimport { Tag, VARIANT as TAG_VARIANT } from \"baseui/tag\";\r\n\r\nimport ProductContext from \"../../context/ProductContext\";\r\n\r\nconst InputReplacement = React.forwardRef(({ tags, removeTag, ...restProps }, ref) => {\r\n  const [css] = useStyletron();\r\n  return (\r\n    <div\r\n      className={css({\r\n        flex: \"1 1 0%\",\r\n        flexWrap: \"wrap\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n      })}\r\n    >\r\n      {tags &&\r\n        tags.map((tag, index) => (\r\n          <Tag variant={TAG_VARIANT.solid} onActionClick={() => removeTag(tag)} key={index}>\r\n            {tag}\r\n          </Tag>\r\n        ))}\r\n      <StyledInput ref={ref} {...restProps} />\r\n    </div>\r\n  );\r\n});\r\nexport const getContainerFontStyle = ({ $theme }) => {\r\n  return $theme.typography.fontBold14;\r\n};\r\n\r\nexport default function CreateTags(props) {\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [tags, setTags] = React.useState([]);\r\n  const addTag = (tag) => {\r\n    setTags([...tags, tag]);\r\n    optionData([...tags, tag]);\r\n  };\r\n  const removeTag = (tag) => {\r\n    const removeTags = tags.filter((t) => t !== tag);\r\n    setTags(removeTags);\r\n    optionData(removeTags);\r\n  };\r\n\r\n  const dispatch = ProductContext.useProductDispatch();\r\n  const optionData = (arr) => {\r\n    // let newArray = {};\r\n    // newArray[props.selectedType[0].value] = arr;\r\n    // console.log(newArray);\r\n    dispatch({\r\n      type: \"VARIANT_OPTION\",\r\n      optionTags: [...arr],\r\n      optionType: props.selectedType,\r\n    });\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    switch (event.keyCode) {\r\n      // Enter\r\n      case 13: {\r\n        if (!value) return;\r\n        addTag(value);\r\n        setValue(\"\");\r\n        return;\r\n      }\r\n      // Backspace\r\n      case 8: {\r\n        if (value || !tags.length) return;\r\n        removeTag(tags[tags.length - 1]);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Input\r\n      placeholder={tags && tags.length ? \"\" : \"Separate options with a comma\"}\r\n      value={value}\r\n      onChange={(e) => setValue(e.currentTarget.value)}\r\n      overrides={{\r\n        Input: {\r\n          style: ({ $theme }) => ({\r\n            width: \"auto\",\r\n            flexGrow: 1,\r\n            color: $theme.colors.textDark,\r\n            ...getContainerFontStyle({ $theme }),\r\n          }),\r\n          component: InputReplacement,\r\n          props: {\r\n            tags: tags,\r\n            removeTag: removeTag,\r\n            onKeyDown: handleKeyDown,\r\n          },\r\n        },\r\n      }}\r\n    />\r\n  );\r\n}\r\n","P:\\moonvella-ecommerce\\src\\assets\\icons\\SearchIcon.js",[],"P:\\moonvella-ecommerce\\src\\components\\SearchBox\\SearchBox.style.js",[],"P:\\moonvella-ecommerce\\src\\pages\\Shop\\DescriptionPage\\DescriptionPage.js",["488","489","490"],"P:\\moonvella-ecommerce\\src\\object\\items.js",[],"P:\\moonvella-ecommerce\\src\\object\\descriptionItems.js",[],"P:\\moonvella-ecommerce\\src\\components\\ArrayProductDescription\\ArrayProductDescription.js",[],{"ruleId":"491","replacedBy":"492"},{"ruleId":"493","replacedBy":"494"},{"ruleId":"495","severity":1,"message":"496","line":2,"column":18,"nodeType":"497","messageId":"498","endLine":2,"endColumn":27},{"ruleId":"495","severity":1,"message":"499","line":3,"column":8,"nodeType":"497","messageId":"498","endLine":3,"endColumn":13},{"ruleId":"495","severity":1,"message":"500","line":8,"column":53,"nodeType":"497","messageId":"498","endLine":8,"endColumn":63},{"ruleId":"495","severity":1,"message":"501","line":12,"column":7,"nodeType":"497","messageId":"498","endLine":12,"endColumn":13},{"ruleId":"495","severity":1,"message":"502","line":51,"column":9,"nodeType":"497","messageId":"498","endLine":51,"endColumn":13},{"ruleId":"495","severity":1,"message":"503","line":57,"column":9,"nodeType":"497","messageId":"498","endLine":57,"endColumn":15},{"ruleId":"495","severity":1,"message":"504","line":63,"column":9,"nodeType":"497","messageId":"498","endLine":63,"endColumn":19},{"ruleId":"495","severity":1,"message":"505","line":69,"column":9,"nodeType":"497","messageId":"498","endLine":69,"endColumn":13},{"ruleId":"495","severity":1,"message":"506","line":125,"column":12,"nodeType":"497","messageId":"498","endLine":125,"endColumn":26},{"ruleId":"495","severity":1,"message":"507","line":22,"column":10,"nodeType":"497","messageId":"498","endLine":22,"endColumn":19},{"ruleId":"495","severity":1,"message":"508","line":21,"column":10,"nodeType":"497","messageId":"498","endLine":21,"endColumn":25},{"ruleId":"495","severity":1,"message":"509","line":21,"column":27,"nodeType":"497","messageId":"498","endLine":21,"endColumn":45},{"ruleId":"510","severity":1,"message":"511","line":70,"column":6,"nodeType":"512","endLine":70,"endColumn":8,"suggestions":"513"},{"ruleId":"514","severity":1,"message":"515","line":9,"column":1,"nodeType":"516","endLine":64,"endColumn":3},{"ruleId":"495","severity":1,"message":"517","line":20,"column":3,"nodeType":"497","messageId":"498","endLine":20,"endColumn":10},{"ruleId":"495","severity":1,"message":"518","line":1,"column":17,"nodeType":"497","messageId":"498","endLine":1,"endColumn":27},{"ruleId":"495","severity":1,"message":"519","line":4,"column":31,"nodeType":"497","messageId":"498","endLine":4,"endColumn":39},{"ruleId":"495","severity":1,"message":"520","line":8,"column":10,"nodeType":"497","messageId":"498","endLine":8,"endColumn":29},{"ruleId":"495","severity":1,"message":"521","line":12,"column":13,"nodeType":"497","messageId":"498","endLine":12,"endColumn":17},{"ruleId":"495","severity":1,"message":"522","line":1,"column":17,"nodeType":"497","messageId":"498","endLine":1,"endColumn":25},{"ruleId":"495","severity":1,"message":"523","line":1,"column":27,"nodeType":"497","messageId":"498","endLine":1,"endColumn":36},{"ruleId":"495","severity":1,"message":"524","line":1,"column":40,"nodeType":"497","messageId":"498","endLine":1,"endColumn":46},{"ruleId":"510","severity":1,"message":"525","line":81,"column":6,"nodeType":"512","endLine":81,"endColumn":39,"suggestions":"526"},{"ruleId":"527","severity":1,"message":"528","line":111,"column":38,"nodeType":"529","messageId":"530","endLine":111,"endColumn":40},{"ruleId":"527","severity":1,"message":"528","line":113,"column":29,"nodeType":"529","messageId":"530","endLine":113,"endColumn":31},{"ruleId":"531","severity":1,"message":"532","line":128,"column":22,"nodeType":"533","messageId":"534","endLine":128,"endColumn":24},{"ruleId":"531","severity":1,"message":"532","line":130,"column":29,"nodeType":"533","messageId":"534","endLine":130,"endColumn":31},{"ruleId":"535","severity":1,"message":"536","line":139,"column":17,"nodeType":"497","messageId":"537","endLine":139,"endColumn":28},{"ruleId":"535","severity":1,"message":"538","line":150,"column":11,"nodeType":"497","messageId":"537","endLine":150,"endColumn":23},{"ruleId":"495","severity":1,"message":"539","line":8,"column":49,"nodeType":"497","messageId":"498","endLine":8,"endColumn":61},{"ruleId":"495","severity":1,"message":"540","line":6,"column":13,"nodeType":"497","messageId":"498","endLine":6,"endColumn":18},{"ruleId":"510","severity":1,"message":"541","line":19,"column":6,"nodeType":"512","endLine":19,"endColumn":8,"suggestions":"542"},{"ruleId":"495","severity":1,"message":"543","line":6,"column":10,"nodeType":"497","messageId":"498","endLine":6,"endColumn":29},{"ruleId":"495","severity":1,"message":"544","line":6,"column":50,"nodeType":"497","messageId":"498","endLine":6,"endColumn":58},{"ruleId":"510","severity":1,"message":"545","line":43,"column":6,"nodeType":"512","endLine":43,"endColumn":16,"suggestions":"546"},{"ruleId":"495","severity":1,"message":"547","line":45,"column":9,"nodeType":"497","messageId":"498","endLine":45,"endColumn":23},{"ruleId":"495","severity":1,"message":"548","line":50,"column":9,"nodeType":"497","messageId":"498","endLine":50,"endColumn":25},{"ruleId":"549","severity":1,"message":"550","line":107,"column":33,"nodeType":"551","endLine":107,"endColumn":78},{"ruleId":"495","severity":1,"message":"552","line":71,"column":7,"nodeType":"497","messageId":"498","endLine":71,"endColumn":15},{"ruleId":"553","severity":1,"message":"554","line":116,"column":11,"nodeType":"551","endLine":116,"endColumn":41},{"ruleId":"527","severity":1,"message":"528","line":133,"column":24,"nodeType":"529","messageId":"530","endLine":133,"endColumn":26},{"ruleId":"510","severity":1,"message":"555","line":144,"column":6,"nodeType":"512","endLine":144,"endColumn":13,"suggestions":"556"},{"ruleId":"495","severity":1,"message":"557","line":2,"column":10,"nodeType":"497","messageId":"498","endLine":2,"endColumn":21},{"ruleId":"558","severity":1,"message":"559","line":60,"column":5,"nodeType":"560","messageId":"561","endLine":74,"endColumn":6},{"ruleId":"527","severity":1,"message":"562","line":35,"column":44,"nodeType":"529","messageId":"563","endLine":35,"endColumn":46},{"ruleId":"553","severity":1,"message":"554","line":52,"column":25,"nodeType":"551","endLine":60,"endColumn":27},{"ruleId":"564","severity":1,"message":"565","line":71,"column":46,"nodeType":"566","endLine":71,"endColumn":61},"no-native-reassign",["567"],"no-negated-in-lhs",["568"],"no-unused-vars","'withStyle' is defined but never used.","Identifier","unusedVar","'dayjs' is defined but never used.","'StyledCell' is defined but never used.","'Status' is assigned a value but never used.","'sent' is assigned a value but never used.","'failed' is assigned a value but never used.","'processing' is assigned a value but never used.","'paid' is assigned a value but never used.","'handleCheckbox' is defined but never used.","'checkedId' is assigned a value but never used.","'paginationCount' is assigned a value but never used.","'setPaginationCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resInboxMsgCon'. Either include it or remove the dependency array.","ArrayExpression",["569"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'NavLink' is defined but never used.","'useContext' is defined but never used.","'CATEGORY' is defined but never used.","'SidebarCategoryIcon' is defined but never used.","'name' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'addVariant'. Either include it or remove the dependency array.",["570"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'combination' is already defined.","redeclared","'combinations' is already defined.","'FieldDetails' is defined but never used.","'value' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'index'. Either include it or remove the dependency array.",["571"],"'FileLibraryListItem' is defined but never used.","'FileMeta' is defined but never used.","React Hook useEffect has a missing dependency: 'variantIndex'. Either include it or remove the dependency array.",["572"],"'handleUploader' is assigned a value but never used.","'handleClickImage' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'hoverDiv' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'mediaFiles'. Either include it or remove the dependency array. You can also do a functional update 'setMediaFiles(m => ...)' if you only need 'mediaFiles' in the 'setMediaFiles' call.",["573"],"'useCallback' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"574","fix":"575"},{"desc":"576","fix":"577"},{"desc":"578","fix":"579"},{"desc":"580","fix":"581"},{"desc":"582","fix":"583"},"Update the dependencies array to be: [resInboxMsgCon]",{"range":"584","text":"585"},"Update the dependencies array to be: [register, tagValues, optionType, addVariant]",{"range":"586","text":"587"},"Update the dependencies array to be: [index]",{"range":"588","text":"589"},"Update the dependencies array to be: [register, variantIndex]",{"range":"590","text":"591"},"Update the dependencies array to be: [files, mediaFiles]",{"range":"592","text":"593"},[2356,2358],"[resInboxMsgCon]",[3339,3372],"[register, tagValues, optionType, addVariant]",[664,666],"[index]",[1980,1990],"[register, variantIndex]",[3679,3686],"[files, mediaFiles]"]